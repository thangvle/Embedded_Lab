// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Array2Mat.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Array2Mat::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Array2Mat::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> Array2Mat::ap_ST_fsm_state1 = "1";
const sc_lv<11> Array2Mat::ap_ST_fsm_state2 = "10";
const sc_lv<11> Array2Mat::ap_ST_fsm_state3 = "100";
const sc_lv<11> Array2Mat::ap_ST_fsm_state4 = "1000";
const sc_lv<11> Array2Mat::ap_ST_fsm_state5 = "10000";
const sc_lv<11> Array2Mat::ap_ST_fsm_state6 = "100000";
const sc_lv<11> Array2Mat::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> Array2Mat::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> Array2Mat::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> Array2Mat::ap_ST_fsm_pp0_stage0 = "1000000000";
const sc_lv<11> Array2Mat::ap_ST_fsm_state13 = "10000000000";
const bool Array2Mat::ap_const_boolean_1 = true;
const sc_lv<32> Array2Mat::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> Array2Mat::ap_const_lv1_0 = "0";
const sc_lv<3> Array2Mat::ap_const_lv3_0 = "000";
const sc_lv<2> Array2Mat::ap_const_lv2_0 = "00";
const sc_lv<4> Array2Mat::ap_const_lv4_0 = "0000";
const sc_lv<8> Array2Mat::ap_const_lv8_0 = "00000000";
const sc_lv<32> Array2Mat::ap_const_lv32_2 = "10";
const sc_lv<32> Array2Mat::ap_const_lv32_9 = "1001";
const bool Array2Mat::ap_const_boolean_0 = false;
const sc_lv<32> Array2Mat::ap_const_lv32_1 = "1";
const sc_lv<32> Array2Mat::ap_const_lv32_8 = "1000";
const sc_lv<1> Array2Mat::ap_const_lv1_1 = "1";
const sc_lv<32> Array2Mat::ap_const_lv32_A = "1010";
const sc_lv<11> Array2Mat::ap_const_lv11_0 = "00000000000";
const sc_lv<7> Array2Mat::ap_const_lv7_0 = "0000000";

Array2Mat::Array2Mat(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( m_axi_fb_RVALID );
    sensitive << ( img_data_stream_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_257 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_reg_257_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( m_axi_fb_RVALID );
    sensitive << ( img_data_stream_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_257 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_reg_257_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( m_axi_fb_RVALID );
    sensitive << ( img_data_stream_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_257 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_reg_257_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter1);
    sensitive << ( m_axi_fb_RVALID );
    sensitive << ( exitcond_reg_257 );

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter2);
    sensitive << ( img_data_stream_V_full_n );
    sensitive << ( exitcond_reg_257_pp0_iter1_reg );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state10);
    sensitive << ( exitcond_fu_216_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_156_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_156_p2 );

    SC_METHOD(thread_ap_sig_ioackin_m_axi_fb_ARREADY);
    sensitive << ( m_axi_fb_ARREADY );
    sensitive << ( ap_reg_ioackin_m_axi_fb_ARREADY );

    SC_METHOD(thread_col_V_fu_221_p2);
    sensitive << ( t_V_3_reg_133 );

    SC_METHOD(thread_exitcond2_fu_156_p2);
    sensitive << ( img_rows_V_read_cast_reg_233 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( t_V_reg_122 );

    SC_METHOD(thread_exitcond_fu_216_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( t_V_3_reg_133 );
    sensitive << ( img_cols_V_read_cast_reg_227 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_fb_blk_n_AR);
    sensitive << ( m_axi_fb_ARREADY );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_fb_blk_n_R);
    sensitive << ( m_axi_fb_RVALID );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_reg_257 );

    SC_METHOD(thread_img_cols_V_read_cast_fu_144_p1);
    sensitive << ( img_cols_V_read );

    SC_METHOD(thread_img_data_stream_V_blk_n);
    sensitive << ( img_data_stream_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_reg_257_pp0_iter1_reg );

    SC_METHOD(thread_img_data_stream_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_reg_257_pp0_iter1_reg );
    sensitive << ( fb_pix_reg_266 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_img_data_stream_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_reg_257_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_img_rows_V_read_cast_fu_148_p1);
    sensitive << ( img_rows_V_read );

    SC_METHOD(thread_m_axi_fb_ARADDR);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( fb_addr_reg_251 );
    sensitive << ( ap_reg_ioackin_m_axi_fb_ARREADY );

    SC_METHOD(thread_m_axi_fb_ARBURST);

    SC_METHOD(thread_m_axi_fb_ARCACHE);

    SC_METHOD(thread_m_axi_fb_ARID);

    SC_METHOD(thread_m_axi_fb_ARLEN);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( img_cols_V_read_cast_reg_227 );
    sensitive << ( ap_reg_ioackin_m_axi_fb_ARREADY );

    SC_METHOD(thread_m_axi_fb_ARLOCK);

    SC_METHOD(thread_m_axi_fb_ARPROT);

    SC_METHOD(thread_m_axi_fb_ARQOS);

    SC_METHOD(thread_m_axi_fb_ARREGION);

    SC_METHOD(thread_m_axi_fb_ARSIZE);

    SC_METHOD(thread_m_axi_fb_ARUSER);

    SC_METHOD(thread_m_axi_fb_ARVALID);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_reg_ioackin_m_axi_fb_ARREADY );

    SC_METHOD(thread_m_axi_fb_AWADDR);

    SC_METHOD(thread_m_axi_fb_AWBURST);

    SC_METHOD(thread_m_axi_fb_AWCACHE);

    SC_METHOD(thread_m_axi_fb_AWID);

    SC_METHOD(thread_m_axi_fb_AWLEN);

    SC_METHOD(thread_m_axi_fb_AWLOCK);

    SC_METHOD(thread_m_axi_fb_AWPROT);

    SC_METHOD(thread_m_axi_fb_AWQOS);

    SC_METHOD(thread_m_axi_fb_AWREGION);

    SC_METHOD(thread_m_axi_fb_AWSIZE);

    SC_METHOD(thread_m_axi_fb_AWUSER);

    SC_METHOD(thread_m_axi_fb_AWVALID);

    SC_METHOD(thread_m_axi_fb_BREADY);

    SC_METHOD(thread_m_axi_fb_RREADY);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_257 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_fb_WDATA);

    SC_METHOD(thread_m_axi_fb_WID);

    SC_METHOD(thread_m_axi_fb_WLAST);

    SC_METHOD(thread_m_axi_fb_WSTRB);

    SC_METHOD(thread_m_axi_fb_WUSER);

    SC_METHOD(thread_m_axi_fb_WVALID);

    SC_METHOD(thread_p_shl2_fu_183_p3);
    sensitive << ( tmp_41_fu_179_p1 );

    SC_METHOD(thread_p_shl_fu_171_p3);
    sensitive << ( tmp_40_fu_167_p1 );

    SC_METHOD(thread_ret_V_fu_191_p2);
    sensitive << ( p_shl_fu_171_p3 );
    sensitive << ( p_shl2_fu_183_p3 );

    SC_METHOD(thread_row_V_fu_161_p2);
    sensitive << ( t_V_reg_122 );

    SC_METHOD(thread_sext_cast_fu_152_p1);
    sensitive << ( fb_offset );

    SC_METHOD(thread_sum1_cast_fu_206_p1);
    sensitive << ( sum1_fu_201_p2 );

    SC_METHOD(thread_sum1_fu_201_p2);
    sensitive << ( sext_cast_reg_238 );
    sensitive << ( tmp_28_cast_fu_197_p1 );

    SC_METHOD(thread_tmp_28_cast_fu_197_p1);
    sensitive << ( ret_V_fu_191_p2 );

    SC_METHOD(thread_tmp_40_fu_167_p1);
    sensitive << ( t_V_reg_122 );

    SC_METHOD(thread_tmp_41_fu_179_p1);
    sensitive << ( t_V_reg_122 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_156_p2 );
    sensitive << ( exitcond_fu_216_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_sig_ioackin_m_axi_fb_ARREADY );

    ap_CS_fsm = "00000000001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_reg_ioackin_m_axi_fb_ARREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Array2Mat_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, m_axi_fb_AWVALID, "(port)m_axi_fb_AWVALID");
    sc_trace(mVcdFile, m_axi_fb_AWREADY, "(port)m_axi_fb_AWREADY");
    sc_trace(mVcdFile, m_axi_fb_AWADDR, "(port)m_axi_fb_AWADDR");
    sc_trace(mVcdFile, m_axi_fb_AWID, "(port)m_axi_fb_AWID");
    sc_trace(mVcdFile, m_axi_fb_AWLEN, "(port)m_axi_fb_AWLEN");
    sc_trace(mVcdFile, m_axi_fb_AWSIZE, "(port)m_axi_fb_AWSIZE");
    sc_trace(mVcdFile, m_axi_fb_AWBURST, "(port)m_axi_fb_AWBURST");
    sc_trace(mVcdFile, m_axi_fb_AWLOCK, "(port)m_axi_fb_AWLOCK");
    sc_trace(mVcdFile, m_axi_fb_AWCACHE, "(port)m_axi_fb_AWCACHE");
    sc_trace(mVcdFile, m_axi_fb_AWPROT, "(port)m_axi_fb_AWPROT");
    sc_trace(mVcdFile, m_axi_fb_AWQOS, "(port)m_axi_fb_AWQOS");
    sc_trace(mVcdFile, m_axi_fb_AWREGION, "(port)m_axi_fb_AWREGION");
    sc_trace(mVcdFile, m_axi_fb_AWUSER, "(port)m_axi_fb_AWUSER");
    sc_trace(mVcdFile, m_axi_fb_WVALID, "(port)m_axi_fb_WVALID");
    sc_trace(mVcdFile, m_axi_fb_WREADY, "(port)m_axi_fb_WREADY");
    sc_trace(mVcdFile, m_axi_fb_WDATA, "(port)m_axi_fb_WDATA");
    sc_trace(mVcdFile, m_axi_fb_WSTRB, "(port)m_axi_fb_WSTRB");
    sc_trace(mVcdFile, m_axi_fb_WLAST, "(port)m_axi_fb_WLAST");
    sc_trace(mVcdFile, m_axi_fb_WID, "(port)m_axi_fb_WID");
    sc_trace(mVcdFile, m_axi_fb_WUSER, "(port)m_axi_fb_WUSER");
    sc_trace(mVcdFile, m_axi_fb_ARVALID, "(port)m_axi_fb_ARVALID");
    sc_trace(mVcdFile, m_axi_fb_ARREADY, "(port)m_axi_fb_ARREADY");
    sc_trace(mVcdFile, m_axi_fb_ARADDR, "(port)m_axi_fb_ARADDR");
    sc_trace(mVcdFile, m_axi_fb_ARID, "(port)m_axi_fb_ARID");
    sc_trace(mVcdFile, m_axi_fb_ARLEN, "(port)m_axi_fb_ARLEN");
    sc_trace(mVcdFile, m_axi_fb_ARSIZE, "(port)m_axi_fb_ARSIZE");
    sc_trace(mVcdFile, m_axi_fb_ARBURST, "(port)m_axi_fb_ARBURST");
    sc_trace(mVcdFile, m_axi_fb_ARLOCK, "(port)m_axi_fb_ARLOCK");
    sc_trace(mVcdFile, m_axi_fb_ARCACHE, "(port)m_axi_fb_ARCACHE");
    sc_trace(mVcdFile, m_axi_fb_ARPROT, "(port)m_axi_fb_ARPROT");
    sc_trace(mVcdFile, m_axi_fb_ARQOS, "(port)m_axi_fb_ARQOS");
    sc_trace(mVcdFile, m_axi_fb_ARREGION, "(port)m_axi_fb_ARREGION");
    sc_trace(mVcdFile, m_axi_fb_ARUSER, "(port)m_axi_fb_ARUSER");
    sc_trace(mVcdFile, m_axi_fb_RVALID, "(port)m_axi_fb_RVALID");
    sc_trace(mVcdFile, m_axi_fb_RREADY, "(port)m_axi_fb_RREADY");
    sc_trace(mVcdFile, m_axi_fb_RDATA, "(port)m_axi_fb_RDATA");
    sc_trace(mVcdFile, m_axi_fb_RLAST, "(port)m_axi_fb_RLAST");
    sc_trace(mVcdFile, m_axi_fb_RID, "(port)m_axi_fb_RID");
    sc_trace(mVcdFile, m_axi_fb_RUSER, "(port)m_axi_fb_RUSER");
    sc_trace(mVcdFile, m_axi_fb_RRESP, "(port)m_axi_fb_RRESP");
    sc_trace(mVcdFile, m_axi_fb_BVALID, "(port)m_axi_fb_BVALID");
    sc_trace(mVcdFile, m_axi_fb_BREADY, "(port)m_axi_fb_BREADY");
    sc_trace(mVcdFile, m_axi_fb_BRESP, "(port)m_axi_fb_BRESP");
    sc_trace(mVcdFile, m_axi_fb_BID, "(port)m_axi_fb_BID");
    sc_trace(mVcdFile, m_axi_fb_BUSER, "(port)m_axi_fb_BUSER");
    sc_trace(mVcdFile, fb_offset, "(port)fb_offset");
    sc_trace(mVcdFile, img_rows_V_read, "(port)img_rows_V_read");
    sc_trace(mVcdFile, img_cols_V_read, "(port)img_cols_V_read");
    sc_trace(mVcdFile, img_data_stream_V_din, "(port)img_data_stream_V_din");
    sc_trace(mVcdFile, img_data_stream_V_full_n, "(port)img_data_stream_V_full_n");
    sc_trace(mVcdFile, img_data_stream_V_write, "(port)img_data_stream_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, fb_blk_n_AR, "fb_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, fb_blk_n_R, "fb_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, exitcond_reg_257, "exitcond_reg_257");
    sc_trace(mVcdFile, img_data_stream_V_blk_n, "img_data_stream_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, exitcond_reg_257_pp0_iter1_reg, "exitcond_reg_257_pp0_iter1_reg");
    sc_trace(mVcdFile, t_V_3_reg_133, "t_V_3_reg_133");
    sc_trace(mVcdFile, img_cols_V_read_cast_fu_144_p1, "img_cols_V_read_cast_fu_144_p1");
    sc_trace(mVcdFile, img_cols_V_read_cast_reg_227, "img_cols_V_read_cast_reg_227");
    sc_trace(mVcdFile, img_rows_V_read_cast_fu_148_p1, "img_rows_V_read_cast_fu_148_p1");
    sc_trace(mVcdFile, img_rows_V_read_cast_reg_233, "img_rows_V_read_cast_reg_233");
    sc_trace(mVcdFile, sext_cast_fu_152_p1, "sext_cast_fu_152_p1");
    sc_trace(mVcdFile, sext_cast_reg_238, "sext_cast_reg_238");
    sc_trace(mVcdFile, row_V_fu_161_p2, "row_V_fu_161_p2");
    sc_trace(mVcdFile, row_V_reg_246, "row_V_reg_246");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, fb_addr_reg_251, "fb_addr_reg_251");
    sc_trace(mVcdFile, exitcond2_fu_156_p2, "exitcond2_fu_156_p2");
    sc_trace(mVcdFile, exitcond_fu_216_p2, "exitcond_fu_216_p2");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter0, "ap_block_state10_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter1, "ap_block_state11_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter2, "ap_block_state12_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, col_V_fu_221_p2, "col_V_fu_221_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, fb_pix_reg_266, "fb_pix_reg_266");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state10, "ap_condition_pp0_exit_iter0_state10");
    sc_trace(mVcdFile, t_V_reg_122, "t_V_reg_122");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, sum1_cast_fu_206_p1, "sum1_cast_fu_206_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_m_axi_fb_ARREADY, "ap_reg_ioackin_m_axi_fb_ARREADY");
    sc_trace(mVcdFile, ap_sig_ioackin_m_axi_fb_ARREADY, "ap_sig_ioackin_m_axi_fb_ARREADY");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_40_fu_167_p1, "tmp_40_fu_167_p1");
    sc_trace(mVcdFile, tmp_41_fu_179_p1, "tmp_41_fu_179_p1");
    sc_trace(mVcdFile, p_shl_fu_171_p3, "p_shl_fu_171_p3");
    sc_trace(mVcdFile, p_shl2_fu_183_p3, "p_shl2_fu_183_p3");
    sc_trace(mVcdFile, ret_V_fu_191_p2, "ret_V_fu_191_p2");
    sc_trace(mVcdFile, tmp_28_cast_fu_197_p1, "tmp_28_cast_fu_197_p1");
    sc_trace(mVcdFile, sum1_fu_201_p2, "sum1_fu_201_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Array2Mat::~Array2Mat() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Array2Mat::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state10.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state10.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state10.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_m_axi_fb_ARREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_fb_ARREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_m_axi_fb_ARREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, m_axi_fb_ARREADY.read())) {
                ap_reg_ioackin_m_axi_fb_ARREADY = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_216_p2.read()))) {
        t_V_3_reg_133 = col_V_fu_221_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        t_V_3_reg_133 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        t_V_reg_122 = row_V_reg_246.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        t_V_reg_122 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_reg_257 = exitcond_fu_216_p2.read();
        exitcond_reg_257_pp0_iter1_reg = exitcond_reg_257.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_156_p2.read()))) {
        fb_addr_reg_251 =  (sc_lv<32>) (sum1_cast_fu_206_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_257.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        fb_pix_reg_266 = m_axi_fb_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        img_cols_V_read_cast_reg_227 = img_cols_V_read_cast_fu_144_p1.read();
        img_rows_V_read_cast_reg_233 = img_rows_V_read_cast_fu_148_p1.read();
        sext_cast_reg_238 = sext_cast_fu_152_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        row_V_reg_246 = row_V_fu_161_p2.read();
    }
}

void Array2Mat::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[9];
}

void Array2Mat::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Array2Mat::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[10];
}

void Array2Mat::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Array2Mat::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Array2Mat::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void Array2Mat::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Array2Mat::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_257.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_fb_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_257_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_V_full_n.read())));
}

void Array2Mat::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_257.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_fb_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_257_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_V_full_n.read())));
}

void Array2Mat::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_257.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_fb_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_257_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_V_full_n.read())));
}

void Array2Mat::thread_ap_block_state10_pp0_stage0_iter0() {
    ap_block_state10_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Array2Mat::thread_ap_block_state11_pp0_stage0_iter1() {
    ap_block_state11_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_257.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_fb_RVALID.read()));
}

void Array2Mat::thread_ap_block_state12_pp0_stage0_iter2() {
    ap_block_state12_pp0_stage0_iter2 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_257_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_V_full_n.read()));
}

void Array2Mat::thread_ap_condition_pp0_exit_iter0_state10() {
    if (esl_seteq<1,1,1>(exitcond_fu_216_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state10 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state10 = ap_const_logic_0;
    }
}

void Array2Mat::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond2_fu_156_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Array2Mat::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Array2Mat::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Array2Mat::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Array2Mat::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_156_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Array2Mat::thread_ap_sig_ioackin_m_axi_fb_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_fb_ARREADY.read())) {
        ap_sig_ioackin_m_axi_fb_ARREADY = m_axi_fb_ARREADY.read();
    } else {
        ap_sig_ioackin_m_axi_fb_ARREADY = ap_const_logic_1;
    }
}

void Array2Mat::thread_col_V_fu_221_p2() {
    col_V_fu_221_p2 = (!t_V_3_reg_133.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(t_V_3_reg_133.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void Array2Mat::thread_exitcond2_fu_156_p2() {
    exitcond2_fu_156_p2 = (!t_V_reg_122.read().is_01() || !img_rows_V_read_cast_reg_233.read().is_01())? sc_lv<1>(): sc_lv<1>(t_V_reg_122.read() == img_rows_V_read_cast_reg_233.read());
}

void Array2Mat::thread_exitcond_fu_216_p2() {
    exitcond_fu_216_p2 = (!t_V_3_reg_133.read().is_01() || !img_cols_V_read_cast_reg_227.read().is_01())? sc_lv<1>(): sc_lv<1>(t_V_3_reg_133.read() == img_cols_V_read_cast_reg_227.read());
}

void Array2Mat::thread_fb_blk_n_AR() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        fb_blk_n_AR = m_axi_fb_ARREADY.read();
    } else {
        fb_blk_n_AR = ap_const_logic_1;
    }
}

void Array2Mat::thread_fb_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_257.read()))) {
        fb_blk_n_R = m_axi_fb_RVALID.read();
    } else {
        fb_blk_n_R = ap_const_logic_1;
    }
}

void Array2Mat::thread_img_cols_V_read_cast_fu_144_p1() {
    img_cols_V_read_cast_fu_144_p1 = esl_sext<32,12>(img_cols_V_read.read());
}

void Array2Mat::thread_img_data_stream_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_257_pp0_iter1_reg.read()))) {
        img_data_stream_V_blk_n = img_data_stream_V_full_n.read();
    } else {
        img_data_stream_V_blk_n = ap_const_logic_1;
    }
}

void Array2Mat::thread_img_data_stream_V_din() {
    img_data_stream_V_din = fb_pix_reg_266.read();
}

void Array2Mat::thread_img_data_stream_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_257_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        img_data_stream_V_write = ap_const_logic_1;
    } else {
        img_data_stream_V_write = ap_const_logic_0;
    }
}

void Array2Mat::thread_img_rows_V_read_cast_fu_148_p1() {
    img_rows_V_read_cast_fu_148_p1 = esl_sext<32,12>(img_rows_V_read.read());
}

void Array2Mat::thread_m_axi_fb_ARADDR() {
    m_axi_fb_ARADDR = fb_addr_reg_251.read();
}

void Array2Mat::thread_m_axi_fb_ARBURST() {
    m_axi_fb_ARBURST = ap_const_lv2_0;
}

void Array2Mat::thread_m_axi_fb_ARCACHE() {
    m_axi_fb_ARCACHE = ap_const_lv4_0;
}

void Array2Mat::thread_m_axi_fb_ARID() {
    m_axi_fb_ARID = ap_const_lv1_0;
}

void Array2Mat::thread_m_axi_fb_ARLEN() {
    m_axi_fb_ARLEN = img_cols_V_read_cast_reg_227.read();
}

void Array2Mat::thread_m_axi_fb_ARLOCK() {
    m_axi_fb_ARLOCK = ap_const_lv2_0;
}

void Array2Mat::thread_m_axi_fb_ARPROT() {
    m_axi_fb_ARPROT = ap_const_lv3_0;
}

void Array2Mat::thread_m_axi_fb_ARQOS() {
    m_axi_fb_ARQOS = ap_const_lv4_0;
}

void Array2Mat::thread_m_axi_fb_ARREGION() {
    m_axi_fb_ARREGION = ap_const_lv4_0;
}

void Array2Mat::thread_m_axi_fb_ARSIZE() {
    m_axi_fb_ARSIZE = ap_const_lv3_0;
}

void Array2Mat::thread_m_axi_fb_ARUSER() {
    m_axi_fb_ARUSER = ap_const_lv1_0;
}

void Array2Mat::thread_m_axi_fb_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_fb_ARREADY.read()))) {
        m_axi_fb_ARVALID = ap_const_logic_1;
    } else {
        m_axi_fb_ARVALID = ap_const_logic_0;
    }
}

void Array2Mat::thread_m_axi_fb_AWADDR() {
    m_axi_fb_AWADDR = ap_const_lv32_0;
}

void Array2Mat::thread_m_axi_fb_AWBURST() {
    m_axi_fb_AWBURST = ap_const_lv2_0;
}

void Array2Mat::thread_m_axi_fb_AWCACHE() {
    m_axi_fb_AWCACHE = ap_const_lv4_0;
}

void Array2Mat::thread_m_axi_fb_AWID() {
    m_axi_fb_AWID = ap_const_lv1_0;
}

void Array2Mat::thread_m_axi_fb_AWLEN() {
    m_axi_fb_AWLEN = ap_const_lv32_0;
}

void Array2Mat::thread_m_axi_fb_AWLOCK() {
    m_axi_fb_AWLOCK = ap_const_lv2_0;
}

void Array2Mat::thread_m_axi_fb_AWPROT() {
    m_axi_fb_AWPROT = ap_const_lv3_0;
}

void Array2Mat::thread_m_axi_fb_AWQOS() {
    m_axi_fb_AWQOS = ap_const_lv4_0;
}

void Array2Mat::thread_m_axi_fb_AWREGION() {
    m_axi_fb_AWREGION = ap_const_lv4_0;
}

void Array2Mat::thread_m_axi_fb_AWSIZE() {
    m_axi_fb_AWSIZE = ap_const_lv3_0;
}

void Array2Mat::thread_m_axi_fb_AWUSER() {
    m_axi_fb_AWUSER = ap_const_lv1_0;
}

void Array2Mat::thread_m_axi_fb_AWVALID() {
    m_axi_fb_AWVALID = ap_const_logic_0;
}

void Array2Mat::thread_m_axi_fb_BREADY() {
    m_axi_fb_BREADY = ap_const_logic_0;
}

void Array2Mat::thread_m_axi_fb_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_257.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        m_axi_fb_RREADY = ap_const_logic_1;
    } else {
        m_axi_fb_RREADY = ap_const_logic_0;
    }
}

void Array2Mat::thread_m_axi_fb_WDATA() {
    m_axi_fb_WDATA = ap_const_lv8_0;
}

void Array2Mat::thread_m_axi_fb_WID() {
    m_axi_fb_WID = ap_const_lv1_0;
}

void Array2Mat::thread_m_axi_fb_WLAST() {
    m_axi_fb_WLAST = ap_const_logic_0;
}

void Array2Mat::thread_m_axi_fb_WSTRB() {
    m_axi_fb_WSTRB = ap_const_lv1_0;
}

void Array2Mat::thread_m_axi_fb_WUSER() {
    m_axi_fb_WUSER = ap_const_lv1_0;
}

void Array2Mat::thread_m_axi_fb_WVALID() {
    m_axi_fb_WVALID = ap_const_logic_0;
}

void Array2Mat::thread_p_shl2_fu_183_p3() {
    p_shl2_fu_183_p3 = esl_concat<15,7>(tmp_41_fu_179_p1.read(), ap_const_lv7_0);
}

void Array2Mat::thread_p_shl_fu_171_p3() {
    p_shl_fu_171_p3 = esl_concat<11,11>(tmp_40_fu_167_p1.read(), ap_const_lv11_0);
}

void Array2Mat::thread_ret_V_fu_191_p2() {
    ret_V_fu_191_p2 = (!p_shl_fu_171_p3.read().is_01() || !p_shl2_fu_183_p3.read().is_01())? sc_lv<22>(): (sc_biguint<22>(p_shl_fu_171_p3.read()) - sc_biguint<22>(p_shl2_fu_183_p3.read()));
}

void Array2Mat::thread_row_V_fu_161_p2() {
    row_V_fu_161_p2 = (!t_V_reg_122.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(t_V_reg_122.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void Array2Mat::thread_sext_cast_fu_152_p1() {
    sext_cast_fu_152_p1 = esl_sext<33,32>(fb_offset.read());
}

void Array2Mat::thread_sum1_cast_fu_206_p1() {
    sum1_cast_fu_206_p1 = esl_sext<64,33>(sum1_fu_201_p2.read());
}

void Array2Mat::thread_sum1_fu_201_p2() {
    sum1_fu_201_p2 = (!tmp_28_cast_fu_197_p1.read().is_01() || !sext_cast_reg_238.read().is_01())? sc_lv<33>(): (sc_bigint<33>(tmp_28_cast_fu_197_p1.read()) + sc_bigint<33>(sext_cast_reg_238.read()));
}

void Array2Mat::thread_tmp_28_cast_fu_197_p1() {
    tmp_28_cast_fu_197_p1 = esl_sext<33,22>(ret_V_fu_191_p2.read());
}

void Array2Mat::thread_tmp_40_fu_167_p1() {
    tmp_40_fu_167_p1 = t_V_reg_122.read().range(11-1, 0);
}

void Array2Mat::thread_tmp_41_fu_179_p1() {
    tmp_41_fu_179_p1 = t_V_reg_122.read().range(15-1, 0);
}

void Array2Mat::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond2_fu_156_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_fb_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 512 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_fu_216_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_fu_216_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXX";
            break;
    }
}

}

