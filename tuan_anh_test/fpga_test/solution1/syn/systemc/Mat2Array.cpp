// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Mat2Array.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Mat2Array::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Mat2Array::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> Mat2Array::ap_ST_fsm_state1 = "1";
const sc_lv<9> Mat2Array::ap_ST_fsm_state2 = "10";
const sc_lv<9> Mat2Array::ap_ST_fsm_state3 = "100";
const sc_lv<9> Mat2Array::ap_ST_fsm_pp0_stage0 = "1000";
const sc_lv<9> Mat2Array::ap_ST_fsm_state7 = "10000";
const sc_lv<9> Mat2Array::ap_ST_fsm_state8 = "100000";
const sc_lv<9> Mat2Array::ap_ST_fsm_state9 = "1000000";
const sc_lv<9> Mat2Array::ap_ST_fsm_state10 = "10000000";
const sc_lv<9> Mat2Array::ap_ST_fsm_state11 = "100000000";
const bool Mat2Array::ap_const_boolean_1 = true;
const sc_lv<32> Mat2Array::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> Mat2Array::ap_const_lv1_0 = "0";
const sc_lv<3> Mat2Array::ap_const_lv3_0 = "000";
const sc_lv<2> Mat2Array::ap_const_lv2_0 = "00";
const sc_lv<4> Mat2Array::ap_const_lv4_0 = "0000";
const sc_lv<32> Mat2Array::ap_const_lv32_3 = "11";
const bool Mat2Array::ap_const_boolean_0 = false;
const sc_lv<32> Mat2Array::ap_const_lv32_2 = "10";
const sc_lv<32> Mat2Array::ap_const_lv32_8 = "1000";
const sc_lv<32> Mat2Array::ap_const_lv32_1 = "1";
const sc_lv<1> Mat2Array::ap_const_lv1_1 = "1";
const sc_lv<11> Mat2Array::ap_const_lv11_0 = "00000000000";
const sc_lv<32> Mat2Array::ap_const_lv32_780 = "11110000000";
const sc_lv<11> Mat2Array::ap_const_lv11_438 = "10000111000";
const sc_lv<11> Mat2Array::ap_const_lv11_1 = "1";
const sc_lv<7> Mat2Array::ap_const_lv7_0 = "0000000";
const sc_lv<11> Mat2Array::ap_const_lv11_780 = "11110000000";

Mat2Array::Mat2Array(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( img_data_stream_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_234 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( img_data_stream_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_234 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_state6_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( img_data_stream_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_234 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_state6_io );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter1);
    sensitive << ( img_data_stream_V_empty_n );
    sensitive << ( exitcond_reg_234 );

    SC_METHOD(thread_ap_block_state6_io);
    sensitive << ( exitcond_reg_234_pp0_iter1_reg );
    sensitive << ( ap_sig_ioackin_m_axi_fb_WREADY );

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter2);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state4);
    sensitive << ( exitcond_fu_203_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_146_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_146_p2 );

    SC_METHOD(thread_ap_sig_ioackin_m_axi_fb_AWREADY);
    sensitive << ( m_axi_fb_AWREADY );
    sensitive << ( ap_reg_ioackin_m_axi_fb_AWREADY );

    SC_METHOD(thread_ap_sig_ioackin_m_axi_fb_WREADY);
    sensitive << ( m_axi_fb_WREADY );
    sensitive << ( ap_reg_ioackin_m_axi_fb_WREADY );

    SC_METHOD(thread_col_V_fu_209_p2);
    sensitive << ( t_V_1_reg_131 );

    SC_METHOD(thread_exitcond1_fu_146_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( t_V_reg_120 );

    SC_METHOD(thread_exitcond_fu_203_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( t_V_1_reg_131 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_fb_blk_n_AW);
    sensitive << ( m_axi_fb_AWREADY );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_fb_blk_n_B);
    sensitive << ( m_axi_fb_BVALID );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_fb_blk_n_W);
    sensitive << ( m_axi_fb_WREADY );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_reg_234_pp0_iter1_reg );

    SC_METHOD(thread_img_data_stream_V_blk_n);
    sensitive << ( img_data_stream_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_reg_234 );

    SC_METHOD(thread_img_data_stream_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_234 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_fb_ARADDR);

    SC_METHOD(thread_m_axi_fb_ARBURST);

    SC_METHOD(thread_m_axi_fb_ARCACHE);

    SC_METHOD(thread_m_axi_fb_ARID);

    SC_METHOD(thread_m_axi_fb_ARLEN);

    SC_METHOD(thread_m_axi_fb_ARLOCK);

    SC_METHOD(thread_m_axi_fb_ARPROT);

    SC_METHOD(thread_m_axi_fb_ARQOS);

    SC_METHOD(thread_m_axi_fb_ARREGION);

    SC_METHOD(thread_m_axi_fb_ARSIZE);

    SC_METHOD(thread_m_axi_fb_ARUSER);

    SC_METHOD(thread_m_axi_fb_ARVALID);

    SC_METHOD(thread_m_axi_fb_AWADDR);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( fb_addr_reg_228 );
    sensitive << ( ap_reg_ioackin_m_axi_fb_AWREADY );

    SC_METHOD(thread_m_axi_fb_AWBURST);

    SC_METHOD(thread_m_axi_fb_AWCACHE);

    SC_METHOD(thread_m_axi_fb_AWID);

    SC_METHOD(thread_m_axi_fb_AWLEN);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_reg_ioackin_m_axi_fb_AWREADY );

    SC_METHOD(thread_m_axi_fb_AWLOCK);

    SC_METHOD(thread_m_axi_fb_AWPROT);

    SC_METHOD(thread_m_axi_fb_AWQOS);

    SC_METHOD(thread_m_axi_fb_AWREGION);

    SC_METHOD(thread_m_axi_fb_AWSIZE);

    SC_METHOD(thread_m_axi_fb_AWUSER);

    SC_METHOD(thread_m_axi_fb_AWVALID);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_reg_ioackin_m_axi_fb_AWREADY );

    SC_METHOD(thread_m_axi_fb_BREADY);
    sensitive << ( m_axi_fb_BVALID );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_m_axi_fb_RREADY);

    SC_METHOD(thread_m_axi_fb_WDATA);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_reg_234_pp0_iter1_reg );
    sensitive << ( tmp_3_reg_243 );
    sensitive << ( ap_reg_ioackin_m_axi_fb_WREADY );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_m_axi_fb_WID);

    SC_METHOD(thread_m_axi_fb_WLAST);

    SC_METHOD(thread_m_axi_fb_WSTRB);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_reg_234_pp0_iter1_reg );
    sensitive << ( ap_reg_ioackin_m_axi_fb_WREADY );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_m_axi_fb_WUSER);

    SC_METHOD(thread_m_axi_fb_WVALID);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_reg_234_pp0_iter1_reg );
    sensitive << ( ap_reg_ioackin_m_axi_fb_WREADY );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_p_shl2_cast_fu_174_p1);
    sensitive << ( p_shl2_fu_166_p3 );

    SC_METHOD(thread_p_shl2_fu_166_p3);
    sensitive << ( t_V_reg_120 );

    SC_METHOD(thread_p_shl_fu_158_p3);
    sensitive << ( t_V_reg_120 );

    SC_METHOD(thread_ret_V_fu_178_p2);
    sensitive << ( p_shl_fu_158_p3 );
    sensitive << ( p_shl2_cast_fu_174_p1 );

    SC_METHOD(thread_row_V_fu_152_p2);
    sensitive << ( t_V_reg_120 );

    SC_METHOD(thread_sext_cast_fu_142_p1);
    sensitive << ( fb_offset );

    SC_METHOD(thread_sum1_cast_fu_193_p1);
    sensitive << ( sum1_fu_188_p2 );

    SC_METHOD(thread_sum1_fu_188_p2);
    sensitive << ( sext_cast_reg_215 );
    sensitive << ( tmp_6_cast_fu_184_p1 );

    SC_METHOD(thread_tmp_6_cast_fu_184_p1);
    sensitive << ( ret_V_fu_178_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_fb_BVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_146_p2 );
    sensitive << ( exitcond_fu_203_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_sig_ioackin_m_axi_fb_AWREADY );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_CS_fsm = "000000001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_reg_ioackin_m_axi_fb_AWREADY = SC_LOGIC_0;
    ap_reg_ioackin_m_axi_fb_WREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Mat2Array_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, img_data_stream_V_dout, "(port)img_data_stream_V_dout");
    sc_trace(mVcdFile, img_data_stream_V_empty_n, "(port)img_data_stream_V_empty_n");
    sc_trace(mVcdFile, img_data_stream_V_read, "(port)img_data_stream_V_read");
    sc_trace(mVcdFile, m_axi_fb_AWVALID, "(port)m_axi_fb_AWVALID");
    sc_trace(mVcdFile, m_axi_fb_AWREADY, "(port)m_axi_fb_AWREADY");
    sc_trace(mVcdFile, m_axi_fb_AWADDR, "(port)m_axi_fb_AWADDR");
    sc_trace(mVcdFile, m_axi_fb_AWID, "(port)m_axi_fb_AWID");
    sc_trace(mVcdFile, m_axi_fb_AWLEN, "(port)m_axi_fb_AWLEN");
    sc_trace(mVcdFile, m_axi_fb_AWSIZE, "(port)m_axi_fb_AWSIZE");
    sc_trace(mVcdFile, m_axi_fb_AWBURST, "(port)m_axi_fb_AWBURST");
    sc_trace(mVcdFile, m_axi_fb_AWLOCK, "(port)m_axi_fb_AWLOCK");
    sc_trace(mVcdFile, m_axi_fb_AWCACHE, "(port)m_axi_fb_AWCACHE");
    sc_trace(mVcdFile, m_axi_fb_AWPROT, "(port)m_axi_fb_AWPROT");
    sc_trace(mVcdFile, m_axi_fb_AWQOS, "(port)m_axi_fb_AWQOS");
    sc_trace(mVcdFile, m_axi_fb_AWREGION, "(port)m_axi_fb_AWREGION");
    sc_trace(mVcdFile, m_axi_fb_AWUSER, "(port)m_axi_fb_AWUSER");
    sc_trace(mVcdFile, m_axi_fb_WVALID, "(port)m_axi_fb_WVALID");
    sc_trace(mVcdFile, m_axi_fb_WREADY, "(port)m_axi_fb_WREADY");
    sc_trace(mVcdFile, m_axi_fb_WDATA, "(port)m_axi_fb_WDATA");
    sc_trace(mVcdFile, m_axi_fb_WSTRB, "(port)m_axi_fb_WSTRB");
    sc_trace(mVcdFile, m_axi_fb_WLAST, "(port)m_axi_fb_WLAST");
    sc_trace(mVcdFile, m_axi_fb_WID, "(port)m_axi_fb_WID");
    sc_trace(mVcdFile, m_axi_fb_WUSER, "(port)m_axi_fb_WUSER");
    sc_trace(mVcdFile, m_axi_fb_ARVALID, "(port)m_axi_fb_ARVALID");
    sc_trace(mVcdFile, m_axi_fb_ARREADY, "(port)m_axi_fb_ARREADY");
    sc_trace(mVcdFile, m_axi_fb_ARADDR, "(port)m_axi_fb_ARADDR");
    sc_trace(mVcdFile, m_axi_fb_ARID, "(port)m_axi_fb_ARID");
    sc_trace(mVcdFile, m_axi_fb_ARLEN, "(port)m_axi_fb_ARLEN");
    sc_trace(mVcdFile, m_axi_fb_ARSIZE, "(port)m_axi_fb_ARSIZE");
    sc_trace(mVcdFile, m_axi_fb_ARBURST, "(port)m_axi_fb_ARBURST");
    sc_trace(mVcdFile, m_axi_fb_ARLOCK, "(port)m_axi_fb_ARLOCK");
    sc_trace(mVcdFile, m_axi_fb_ARCACHE, "(port)m_axi_fb_ARCACHE");
    sc_trace(mVcdFile, m_axi_fb_ARPROT, "(port)m_axi_fb_ARPROT");
    sc_trace(mVcdFile, m_axi_fb_ARQOS, "(port)m_axi_fb_ARQOS");
    sc_trace(mVcdFile, m_axi_fb_ARREGION, "(port)m_axi_fb_ARREGION");
    sc_trace(mVcdFile, m_axi_fb_ARUSER, "(port)m_axi_fb_ARUSER");
    sc_trace(mVcdFile, m_axi_fb_RVALID, "(port)m_axi_fb_RVALID");
    sc_trace(mVcdFile, m_axi_fb_RREADY, "(port)m_axi_fb_RREADY");
    sc_trace(mVcdFile, m_axi_fb_RDATA, "(port)m_axi_fb_RDATA");
    sc_trace(mVcdFile, m_axi_fb_RLAST, "(port)m_axi_fb_RLAST");
    sc_trace(mVcdFile, m_axi_fb_RID, "(port)m_axi_fb_RID");
    sc_trace(mVcdFile, m_axi_fb_RUSER, "(port)m_axi_fb_RUSER");
    sc_trace(mVcdFile, m_axi_fb_RRESP, "(port)m_axi_fb_RRESP");
    sc_trace(mVcdFile, m_axi_fb_BVALID, "(port)m_axi_fb_BVALID");
    sc_trace(mVcdFile, m_axi_fb_BREADY, "(port)m_axi_fb_BREADY");
    sc_trace(mVcdFile, m_axi_fb_BRESP, "(port)m_axi_fb_BRESP");
    sc_trace(mVcdFile, m_axi_fb_BID, "(port)m_axi_fb_BID");
    sc_trace(mVcdFile, m_axi_fb_BUSER, "(port)m_axi_fb_BUSER");
    sc_trace(mVcdFile, fb_offset, "(port)fb_offset");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, img_data_stream_V_blk_n, "img_data_stream_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, exitcond_reg_234, "exitcond_reg_234");
    sc_trace(mVcdFile, fb_blk_n_AW, "fb_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, fb_blk_n_W, "fb_blk_n_W");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, exitcond_reg_234_pp0_iter1_reg, "exitcond_reg_234_pp0_iter1_reg");
    sc_trace(mVcdFile, fb_blk_n_B, "fb_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, t_V_1_reg_131, "t_V_1_reg_131");
    sc_trace(mVcdFile, sext_cast_fu_142_p1, "sext_cast_fu_142_p1");
    sc_trace(mVcdFile, sext_cast_reg_215, "sext_cast_reg_215");
    sc_trace(mVcdFile, row_V_fu_152_p2, "row_V_fu_152_p2");
    sc_trace(mVcdFile, row_V_reg_223, "row_V_reg_223");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, fb_addr_reg_228, "fb_addr_reg_228");
    sc_trace(mVcdFile, exitcond1_fu_146_p2, "exitcond1_fu_146_p2");
    sc_trace(mVcdFile, exitcond_fu_203_p2, "exitcond_fu_203_p2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter0, "ap_block_state4_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter1, "ap_block_state5_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter2, "ap_block_state6_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_sig_ioackin_m_axi_fb_WREADY, "ap_sig_ioackin_m_axi_fb_WREADY");
    sc_trace(mVcdFile, ap_block_state6_io, "ap_block_state6_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, col_V_fu_209_p2, "col_V_fu_209_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_3_reg_243, "tmp_3_reg_243");
    sc_trace(mVcdFile, ap_sig_ioackin_m_axi_fb_AWREADY, "ap_sig_ioackin_m_axi_fb_AWREADY");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state4, "ap_condition_pp0_exit_iter0_state4");
    sc_trace(mVcdFile, t_V_reg_120, "t_V_reg_120");
    sc_trace(mVcdFile, sum1_cast_fu_193_p1, "sum1_cast_fu_193_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_m_axi_fb_AWREADY, "ap_reg_ioackin_m_axi_fb_AWREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_m_axi_fb_WREADY, "ap_reg_ioackin_m_axi_fb_WREADY");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, p_shl2_fu_166_p3, "p_shl2_fu_166_p3");
    sc_trace(mVcdFile, p_shl_fu_158_p3, "p_shl_fu_158_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_174_p1, "p_shl2_cast_fu_174_p1");
    sc_trace(mVcdFile, ret_V_fu_178_p2, "ret_V_fu_178_p2");
    sc_trace(mVcdFile, tmp_6_cast_fu_184_p1, "tmp_6_cast_fu_184_p1");
    sc_trace(mVcdFile, sum1_fu_188_p2, "sum1_fu_188_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Mat2Array::~Mat2Array() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Mat2Array::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state4.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                    esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_fb_AWREADY.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state4.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state4.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                    esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_fb_AWREADY.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_m_axi_fb_AWREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_fb_AWREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_m_axi_fb_AWREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, m_axi_fb_AWREADY.read())) {
                ap_reg_ioackin_m_axi_fb_AWREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_m_axi_fb_WREADY = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_234_pp0_iter1_reg.read()))) {
            if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_m_axi_fb_WREADY = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, m_axi_fb_WREADY.read()) && 
                        esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
                ap_reg_ioackin_m_axi_fb_WREADY = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_203_p2.read()))) {
        t_V_1_reg_131 = col_V_fu_209_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_fb_AWREADY.read(), ap_const_logic_1))) {
        t_V_1_reg_131 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(m_axi_fb_BVALID.read(), ap_const_logic_1))) {
        t_V_reg_120 = row_V_reg_223.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        t_V_reg_120 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_reg_234 = exitcond_fu_203_p2.read();
        exitcond_reg_234_pp0_iter1_reg = exitcond_reg_234.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_146_p2.read()))) {
        fb_addr_reg_228 =  (sc_lv<32>) (sum1_cast_fu_193_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        row_V_reg_223 = row_V_fu_152_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        sext_cast_reg_215 = sext_cast_fu_142_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_234.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_3_reg_243 = img_data_stream_V_dout.read();
    }
}

void Mat2Array::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[3];
}

void Mat2Array::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Mat2Array::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[8];
}

void Mat2Array::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Mat2Array::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Mat2Array::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Mat2Array::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_234.read()) && esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_V_empty_n.read()));
}

void Mat2Array::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_234.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state6_io.read())));
}

void Mat2Array::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_234.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state6_io.read())));
}

void Mat2Array::thread_ap_block_state4_pp0_stage0_iter0() {
    ap_block_state4_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Mat2Array::thread_ap_block_state5_pp0_stage0_iter1() {
    ap_block_state5_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_234.read()) && esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_V_empty_n.read()));
}

void Mat2Array::thread_ap_block_state6_io() {
    ap_block_state6_io = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_234_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_fb_WREADY.read()));
}

void Mat2Array::thread_ap_block_state6_pp0_stage0_iter2() {
    ap_block_state6_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Mat2Array::thread_ap_condition_pp0_exit_iter0_state4() {
    if (esl_seteq<1,1,1>(exitcond_fu_203_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state4 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state4 = ap_const_logic_0;
    }
}

void Mat2Array::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond1_fu_146_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Mat2Array::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Mat2Array::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Mat2Array::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Mat2Array::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_146_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Mat2Array::thread_ap_sig_ioackin_m_axi_fb_AWREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_fb_AWREADY.read())) {
        ap_sig_ioackin_m_axi_fb_AWREADY = m_axi_fb_AWREADY.read();
    } else {
        ap_sig_ioackin_m_axi_fb_AWREADY = ap_const_logic_1;
    }
}

void Mat2Array::thread_ap_sig_ioackin_m_axi_fb_WREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_fb_WREADY.read())) {
        ap_sig_ioackin_m_axi_fb_WREADY = m_axi_fb_WREADY.read();
    } else {
        ap_sig_ioackin_m_axi_fb_WREADY = ap_const_logic_1;
    }
}

void Mat2Array::thread_col_V_fu_209_p2() {
    col_V_fu_209_p2 = (!t_V_1_reg_131.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(t_V_1_reg_131.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void Mat2Array::thread_exitcond1_fu_146_p2() {
    exitcond1_fu_146_p2 = (!t_V_reg_120.read().is_01() || !ap_const_lv11_438.is_01())? sc_lv<1>(): sc_lv<1>(t_V_reg_120.read() == ap_const_lv11_438);
}

void Mat2Array::thread_exitcond_fu_203_p2() {
    exitcond_fu_203_p2 = (!t_V_1_reg_131.read().is_01() || !ap_const_lv11_780.is_01())? sc_lv<1>(): sc_lv<1>(t_V_1_reg_131.read() == ap_const_lv11_780);
}

void Mat2Array::thread_fb_blk_n_AW() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        fb_blk_n_AW = m_axi_fb_AWREADY.read();
    } else {
        fb_blk_n_AW = ap_const_logic_1;
    }
}

void Mat2Array::thread_fb_blk_n_B() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        fb_blk_n_B = m_axi_fb_BVALID.read();
    } else {
        fb_blk_n_B = ap_const_logic_1;
    }
}

void Mat2Array::thread_fb_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_234_pp0_iter1_reg.read()))) {
        fb_blk_n_W = m_axi_fb_WREADY.read();
    } else {
        fb_blk_n_W = ap_const_logic_1;
    }
}

void Mat2Array::thread_img_data_stream_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_234.read()))) {
        img_data_stream_V_blk_n = img_data_stream_V_empty_n.read();
    } else {
        img_data_stream_V_blk_n = ap_const_logic_1;
    }
}

void Mat2Array::thread_img_data_stream_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_234.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        img_data_stream_V_read = ap_const_logic_1;
    } else {
        img_data_stream_V_read = ap_const_logic_0;
    }
}

void Mat2Array::thread_m_axi_fb_ARADDR() {
    m_axi_fb_ARADDR = ap_const_lv32_0;
}

void Mat2Array::thread_m_axi_fb_ARBURST() {
    m_axi_fb_ARBURST = ap_const_lv2_0;
}

void Mat2Array::thread_m_axi_fb_ARCACHE() {
    m_axi_fb_ARCACHE = ap_const_lv4_0;
}

void Mat2Array::thread_m_axi_fb_ARID() {
    m_axi_fb_ARID = ap_const_lv1_0;
}

void Mat2Array::thread_m_axi_fb_ARLEN() {
    m_axi_fb_ARLEN = ap_const_lv32_0;
}

void Mat2Array::thread_m_axi_fb_ARLOCK() {
    m_axi_fb_ARLOCK = ap_const_lv2_0;
}

void Mat2Array::thread_m_axi_fb_ARPROT() {
    m_axi_fb_ARPROT = ap_const_lv3_0;
}

void Mat2Array::thread_m_axi_fb_ARQOS() {
    m_axi_fb_ARQOS = ap_const_lv4_0;
}

void Mat2Array::thread_m_axi_fb_ARREGION() {
    m_axi_fb_ARREGION = ap_const_lv4_0;
}

void Mat2Array::thread_m_axi_fb_ARSIZE() {
    m_axi_fb_ARSIZE = ap_const_lv3_0;
}

void Mat2Array::thread_m_axi_fb_ARUSER() {
    m_axi_fb_ARUSER = ap_const_lv1_0;
}

void Mat2Array::thread_m_axi_fb_ARVALID() {
    m_axi_fb_ARVALID = ap_const_logic_0;
}

void Mat2Array::thread_m_axi_fb_AWADDR() {
    m_axi_fb_AWADDR = fb_addr_reg_228.read();
}

void Mat2Array::thread_m_axi_fb_AWBURST() {
    m_axi_fb_AWBURST = ap_const_lv2_0;
}

void Mat2Array::thread_m_axi_fb_AWCACHE() {
    m_axi_fb_AWCACHE = ap_const_lv4_0;
}

void Mat2Array::thread_m_axi_fb_AWID() {
    m_axi_fb_AWID = ap_const_lv1_0;
}

void Mat2Array::thread_m_axi_fb_AWLEN() {
    m_axi_fb_AWLEN = ap_const_lv32_780;
}

void Mat2Array::thread_m_axi_fb_AWLOCK() {
    m_axi_fb_AWLOCK = ap_const_lv2_0;
}

void Mat2Array::thread_m_axi_fb_AWPROT() {
    m_axi_fb_AWPROT = ap_const_lv3_0;
}

void Mat2Array::thread_m_axi_fb_AWQOS() {
    m_axi_fb_AWQOS = ap_const_lv4_0;
}

void Mat2Array::thread_m_axi_fb_AWREGION() {
    m_axi_fb_AWREGION = ap_const_lv4_0;
}

void Mat2Array::thread_m_axi_fb_AWSIZE() {
    m_axi_fb_AWSIZE = ap_const_lv3_0;
}

void Mat2Array::thread_m_axi_fb_AWUSER() {
    m_axi_fb_AWUSER = ap_const_lv1_0;
}

void Mat2Array::thread_m_axi_fb_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_fb_AWREADY.read()))) {
        m_axi_fb_AWVALID = ap_const_logic_1;
    } else {
        m_axi_fb_AWVALID = ap_const_logic_0;
    }
}

void Mat2Array::thread_m_axi_fb_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(m_axi_fb_BVALID.read(), ap_const_logic_1))) {
        m_axi_fb_BREADY = ap_const_logic_1;
    } else {
        m_axi_fb_BREADY = ap_const_logic_0;
    }
}

void Mat2Array::thread_m_axi_fb_RREADY() {
    m_axi_fb_RREADY = ap_const_logic_0;
}

void Mat2Array::thread_m_axi_fb_WDATA() {
    m_axi_fb_WDATA = tmp_3_reg_243.read();
}

void Mat2Array::thread_m_axi_fb_WID() {
    m_axi_fb_WID = ap_const_lv1_0;
}

void Mat2Array::thread_m_axi_fb_WLAST() {
    m_axi_fb_WLAST = ap_const_logic_0;
}

void Mat2Array::thread_m_axi_fb_WSTRB() {
    m_axi_fb_WSTRB = ap_const_lv1_1;
}

void Mat2Array::thread_m_axi_fb_WUSER() {
    m_axi_fb_WUSER = ap_const_lv1_0;
}

void Mat2Array::thread_m_axi_fb_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_234_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_fb_WREADY.read()))) {
        m_axi_fb_WVALID = ap_const_logic_1;
    } else {
        m_axi_fb_WVALID = ap_const_logic_0;
    }
}

void Mat2Array::thread_p_shl2_cast_fu_174_p1() {
    p_shl2_cast_fu_174_p1 = esl_zext<22,18>(p_shl2_fu_166_p3.read());
}

void Mat2Array::thread_p_shl2_fu_166_p3() {
    p_shl2_fu_166_p3 = esl_concat<11,7>(t_V_reg_120.read(), ap_const_lv7_0);
}

void Mat2Array::thread_p_shl_fu_158_p3() {
    p_shl_fu_158_p3 = esl_concat<11,11>(t_V_reg_120.read(), ap_const_lv11_0);
}

void Mat2Array::thread_ret_V_fu_178_p2() {
    ret_V_fu_178_p2 = (!p_shl_fu_158_p3.read().is_01() || !p_shl2_cast_fu_174_p1.read().is_01())? sc_lv<22>(): (sc_biguint<22>(p_shl_fu_158_p3.read()) - sc_biguint<22>(p_shl2_cast_fu_174_p1.read()));
}

void Mat2Array::thread_row_V_fu_152_p2() {
    row_V_fu_152_p2 = (!t_V_reg_120.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(t_V_reg_120.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void Mat2Array::thread_sext_cast_fu_142_p1() {
    sext_cast_fu_142_p1 = esl_sext<33,32>(fb_offset.read());
}

void Mat2Array::thread_sum1_cast_fu_193_p1() {
    sum1_cast_fu_193_p1 = esl_sext<64,33>(sum1_fu_188_p2.read());
}

void Mat2Array::thread_sum1_fu_188_p2() {
    sum1_fu_188_p2 = (!tmp_6_cast_fu_184_p1.read().is_01() || !sext_cast_reg_215.read().is_01())? sc_lv<33>(): (sc_bigint<33>(tmp_6_cast_fu_184_p1.read()) + sc_bigint<33>(sext_cast_reg_215.read()));
}

void Mat2Array::thread_tmp_6_cast_fu_184_p1() {
    tmp_6_cast_fu_184_p1 = esl_sext<33,22>(ret_V_fu_178_p2.read());
}

void Mat2Array::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_146_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_fb_AWREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_fu_203_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_fu_203_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(m_axi_fb_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXX";
            break;
    }
}

}

