// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conv_HH_
#define _conv_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Block_proc19.h"
#include "AXIM2Mat.h"
#include "Filter2D.h"
#include "Mat2AXIM.h"
#include "fifo_w12_d2_A.h"
#include "fifo_w32_d2_A.h"
#include "fifo_w32_d4_A.h"
#include "fifo_w8_d2_A.h"
#include "start_for_Mat2AXIeOg.h"
#include "start_for_Filter2fYi.h"
#include "conv_CRTL_BUS_s_axi.h"
#include "conv_CRTL_BUS_m_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CRTL_BUS_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_CRTL_BUS_DATA_WIDTH = 32,
         unsigned int C_M_AXI_CRTL_BUS_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_CRTL_BUS_ID_WIDTH = 1,
         unsigned int C_M_AXI_CRTL_BUS_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_CRTL_BUS_DATA_WIDTH = 32,
         unsigned int C_M_AXI_CRTL_BUS_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_CRTL_BUS_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_CRTL_BUS_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_CRTL_BUS_BUSER_WIDTH = 1>
struct conv : public sc_module {
    // Port declarations 65
    sc_in< sc_logic > s_axi_CRTL_BUS_AWVALID;
    sc_out< sc_logic > s_axi_CRTL_BUS_AWREADY;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_ADDR_WIDTH> > s_axi_CRTL_BUS_AWADDR;
    sc_in< sc_logic > s_axi_CRTL_BUS_WVALID;
    sc_out< sc_logic > s_axi_CRTL_BUS_WREADY;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_DATA_WIDTH> > s_axi_CRTL_BUS_WDATA;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_DATA_WIDTH/8> > s_axi_CRTL_BUS_WSTRB;
    sc_in< sc_logic > s_axi_CRTL_BUS_ARVALID;
    sc_out< sc_logic > s_axi_CRTL_BUS_ARREADY;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_ADDR_WIDTH> > s_axi_CRTL_BUS_ARADDR;
    sc_out< sc_logic > s_axi_CRTL_BUS_RVALID;
    sc_in< sc_logic > s_axi_CRTL_BUS_RREADY;
    sc_out< sc_uint<C_S_AXI_CRTL_BUS_DATA_WIDTH> > s_axi_CRTL_BUS_RDATA;
    sc_out< sc_lv<2> > s_axi_CRTL_BUS_RRESP;
    sc_out< sc_logic > s_axi_CRTL_BUS_BVALID;
    sc_in< sc_logic > s_axi_CRTL_BUS_BREADY;
    sc_out< sc_lv<2> > s_axi_CRTL_BUS_BRESP;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > interrupt;
    sc_out< sc_logic > m_axi_CRTL_BUS_AWVALID;
    sc_in< sc_logic > m_axi_CRTL_BUS_AWREADY;
    sc_out< sc_uint<C_M_AXI_CRTL_BUS_ADDR_WIDTH> > m_axi_CRTL_BUS_AWADDR;
    sc_out< sc_uint<C_M_AXI_CRTL_BUS_ID_WIDTH> > m_axi_CRTL_BUS_AWID;
    sc_out< sc_lv<8> > m_axi_CRTL_BUS_AWLEN;
    sc_out< sc_lv<3> > m_axi_CRTL_BUS_AWSIZE;
    sc_out< sc_lv<2> > m_axi_CRTL_BUS_AWBURST;
    sc_out< sc_lv<2> > m_axi_CRTL_BUS_AWLOCK;
    sc_out< sc_lv<4> > m_axi_CRTL_BUS_AWCACHE;
    sc_out< sc_lv<3> > m_axi_CRTL_BUS_AWPROT;
    sc_out< sc_lv<4> > m_axi_CRTL_BUS_AWQOS;
    sc_out< sc_lv<4> > m_axi_CRTL_BUS_AWREGION;
    sc_out< sc_uint<C_M_AXI_CRTL_BUS_AWUSER_WIDTH> > m_axi_CRTL_BUS_AWUSER;
    sc_out< sc_logic > m_axi_CRTL_BUS_WVALID;
    sc_in< sc_logic > m_axi_CRTL_BUS_WREADY;
    sc_out< sc_uint<C_M_AXI_CRTL_BUS_DATA_WIDTH> > m_axi_CRTL_BUS_WDATA;
    sc_out< sc_uint<C_M_AXI_CRTL_BUS_DATA_WIDTH/8> > m_axi_CRTL_BUS_WSTRB;
    sc_out< sc_logic > m_axi_CRTL_BUS_WLAST;
    sc_out< sc_uint<C_M_AXI_CRTL_BUS_ID_WIDTH> > m_axi_CRTL_BUS_WID;
    sc_out< sc_uint<C_M_AXI_CRTL_BUS_WUSER_WIDTH> > m_axi_CRTL_BUS_WUSER;
    sc_out< sc_logic > m_axi_CRTL_BUS_ARVALID;
    sc_in< sc_logic > m_axi_CRTL_BUS_ARREADY;
    sc_out< sc_uint<C_M_AXI_CRTL_BUS_ADDR_WIDTH> > m_axi_CRTL_BUS_ARADDR;
    sc_out< sc_uint<C_M_AXI_CRTL_BUS_ID_WIDTH> > m_axi_CRTL_BUS_ARID;
    sc_out< sc_lv<8> > m_axi_CRTL_BUS_ARLEN;
    sc_out< sc_lv<3> > m_axi_CRTL_BUS_ARSIZE;
    sc_out< sc_lv<2> > m_axi_CRTL_BUS_ARBURST;
    sc_out< sc_lv<2> > m_axi_CRTL_BUS_ARLOCK;
    sc_out< sc_lv<4> > m_axi_CRTL_BUS_ARCACHE;
    sc_out< sc_lv<3> > m_axi_CRTL_BUS_ARPROT;
    sc_out< sc_lv<4> > m_axi_CRTL_BUS_ARQOS;
    sc_out< sc_lv<4> > m_axi_CRTL_BUS_ARREGION;
    sc_out< sc_uint<C_M_AXI_CRTL_BUS_ARUSER_WIDTH> > m_axi_CRTL_BUS_ARUSER;
    sc_in< sc_logic > m_axi_CRTL_BUS_RVALID;
    sc_out< sc_logic > m_axi_CRTL_BUS_RREADY;
    sc_in< sc_uint<C_M_AXI_CRTL_BUS_DATA_WIDTH> > m_axi_CRTL_BUS_RDATA;
    sc_in< sc_logic > m_axi_CRTL_BUS_RLAST;
    sc_in< sc_uint<C_M_AXI_CRTL_BUS_ID_WIDTH> > m_axi_CRTL_BUS_RID;
    sc_in< sc_uint<C_M_AXI_CRTL_BUS_RUSER_WIDTH> > m_axi_CRTL_BUS_RUSER;
    sc_in< sc_lv<2> > m_axi_CRTL_BUS_RRESP;
    sc_in< sc_logic > m_axi_CRTL_BUS_BVALID;
    sc_out< sc_logic > m_axi_CRTL_BUS_BREADY;
    sc_in< sc_lv<2> > m_axi_CRTL_BUS_BRESP;
    sc_in< sc_uint<C_M_AXI_CRTL_BUS_ID_WIDTH> > m_axi_CRTL_BUS_BID;
    sc_in< sc_uint<C_M_AXI_CRTL_BUS_BUSER_WIDTH> > m_axi_CRTL_BUS_BUSER;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<2> > ap_var_for_const2;
    sc_signal< sc_lv<1> > ap_var_for_const3;
    sc_signal< sc_lv<8> > ap_var_for_const4;


    // Module declarations
    conv(sc_module_name name);
    SC_HAS_PROCESS(conv);

    ~conv();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    conv_CRTL_BUS_s_axi<C_S_AXI_CRTL_BUS_ADDR_WIDTH,C_S_AXI_CRTL_BUS_DATA_WIDTH>* conv_CRTL_BUS_s_axi_U;
    conv_CRTL_BUS_m_axi<0,8,32,5,16,16,16,16,C_M_AXI_CRTL_BUS_ID_WIDTH,C_M_AXI_CRTL_BUS_ADDR_WIDTH,C_M_AXI_CRTL_BUS_DATA_WIDTH,C_M_AXI_CRTL_BUS_AWUSER_WIDTH,C_M_AXI_CRTL_BUS_ARUSER_WIDTH,C_M_AXI_CRTL_BUS_WUSER_WIDTH,C_M_AXI_CRTL_BUS_RUSER_WIDTH,C_M_AXI_CRTL_BUS_BUSER_WIDTH,C_M_AXI_CRTL_BUS_USER_VALUE,C_M_AXI_CRTL_BUS_PROT_VALUE,C_M_AXI_CRTL_BUS_CACHE_VALUE>* conv_CRTL_BUS_m_axi_U;
    Block_proc19* Block_proc19_U0;
    AXIM2Mat* AXIM2Mat_U0;
    Filter2D* Filter2D_U0;
    Mat2AXIM* Mat2AXIM_U0;
    fifo_w12_d2_A* src_rows_V_c_U;
    fifo_w12_d2_A* src_cols_V_c_U;
    fifo_w32_d2_A* image_in_c_U;
    fifo_w32_d4_A* image_out_c_U;
    fifo_w8_d2_A* src_data_stream_0_V_U;
    fifo_w12_d2_A* src_rows_V_c10_U;
    fifo_w12_d2_A* src_cols_V_c11_U;
    fifo_w8_d2_A* dst_data_stream_0_V_U;
    start_for_Mat2AXIeOg* start_for_Mat2AXIeOg_U;
    start_for_Filter2fYi* start_for_Filter2fYi_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<32> > image_in;
    sc_signal< sc_lv<32> > image_out;
    sc_signal< sc_logic > CRTL_BUS_AWREADY;
    sc_signal< sc_logic > CRTL_BUS_WREADY;
    sc_signal< sc_logic > CRTL_BUS_ARREADY;
    sc_signal< sc_logic > CRTL_BUS_RVALID;
    sc_signal< sc_lv<8> > CRTL_BUS_RDATA;
    sc_signal< sc_logic > CRTL_BUS_RLAST;
    sc_signal< sc_lv<1> > CRTL_BUS_RID;
    sc_signal< sc_lv<1> > CRTL_BUS_RUSER;
    sc_signal< sc_lv<2> > CRTL_BUS_RRESP;
    sc_signal< sc_logic > CRTL_BUS_BVALID;
    sc_signal< sc_lv<2> > CRTL_BUS_BRESP;
    sc_signal< sc_lv<1> > CRTL_BUS_BID;
    sc_signal< sc_lv<1> > CRTL_BUS_BUSER;
    sc_signal< sc_logic > Block_proc19_U0_ap_start;
    sc_signal< sc_logic > Block_proc19_U0_ap_done;
    sc_signal< sc_logic > Block_proc19_U0_ap_continue;
    sc_signal< sc_logic > Block_proc19_U0_ap_idle;
    sc_signal< sc_logic > Block_proc19_U0_ap_ready;
    sc_signal< sc_logic > Block_proc19_U0_start_out;
    sc_signal< sc_logic > Block_proc19_U0_start_write;
    sc_signal< sc_lv<12> > Block_proc19_U0_src_rows_V_out_din;
    sc_signal< sc_logic > Block_proc19_U0_src_rows_V_out_write;
    sc_signal< sc_lv<12> > Block_proc19_U0_src_cols_V_out_din;
    sc_signal< sc_logic > Block_proc19_U0_src_cols_V_out_write;
    sc_signal< sc_lv<32> > Block_proc19_U0_image_in_out_din;
    sc_signal< sc_logic > Block_proc19_U0_image_in_out_write;
    sc_signal< sc_lv<32> > Block_proc19_U0_image_out_out_din;
    sc_signal< sc_logic > Block_proc19_U0_image_out_out_write;
    sc_signal< sc_logic > AXIM2Mat_U0_ap_start;
    sc_signal< sc_logic > AXIM2Mat_U0_ap_done;
    sc_signal< sc_logic > AXIM2Mat_U0_ap_continue;
    sc_signal< sc_logic > AXIM2Mat_U0_ap_idle;
    sc_signal< sc_logic > AXIM2Mat_U0_ap_ready;
    sc_signal< sc_logic > AXIM2Mat_U0_start_out;
    sc_signal< sc_logic > AXIM2Mat_U0_start_write;
    sc_signal< sc_logic > AXIM2Mat_U0_m_axi_fb_AWVALID;
    sc_signal< sc_lv<32> > AXIM2Mat_U0_m_axi_fb_AWADDR;
    sc_signal< sc_lv<1> > AXIM2Mat_U0_m_axi_fb_AWID;
    sc_signal< sc_lv<32> > AXIM2Mat_U0_m_axi_fb_AWLEN;
    sc_signal< sc_lv<3> > AXIM2Mat_U0_m_axi_fb_AWSIZE;
    sc_signal< sc_lv<2> > AXIM2Mat_U0_m_axi_fb_AWBURST;
    sc_signal< sc_lv<2> > AXIM2Mat_U0_m_axi_fb_AWLOCK;
    sc_signal< sc_lv<4> > AXIM2Mat_U0_m_axi_fb_AWCACHE;
    sc_signal< sc_lv<3> > AXIM2Mat_U0_m_axi_fb_AWPROT;
    sc_signal< sc_lv<4> > AXIM2Mat_U0_m_axi_fb_AWQOS;
    sc_signal< sc_lv<4> > AXIM2Mat_U0_m_axi_fb_AWREGION;
    sc_signal< sc_lv<1> > AXIM2Mat_U0_m_axi_fb_AWUSER;
    sc_signal< sc_logic > AXIM2Mat_U0_m_axi_fb_WVALID;
    sc_signal< sc_lv<8> > AXIM2Mat_U0_m_axi_fb_WDATA;
    sc_signal< sc_lv<1> > AXIM2Mat_U0_m_axi_fb_WSTRB;
    sc_signal< sc_logic > AXIM2Mat_U0_m_axi_fb_WLAST;
    sc_signal< sc_lv<1> > AXIM2Mat_U0_m_axi_fb_WID;
    sc_signal< sc_lv<1> > AXIM2Mat_U0_m_axi_fb_WUSER;
    sc_signal< sc_logic > AXIM2Mat_U0_m_axi_fb_ARVALID;
    sc_signal< sc_lv<32> > AXIM2Mat_U0_m_axi_fb_ARADDR;
    sc_signal< sc_lv<1> > AXIM2Mat_U0_m_axi_fb_ARID;
    sc_signal< sc_lv<32> > AXIM2Mat_U0_m_axi_fb_ARLEN;
    sc_signal< sc_lv<3> > AXIM2Mat_U0_m_axi_fb_ARSIZE;
    sc_signal< sc_lv<2> > AXIM2Mat_U0_m_axi_fb_ARBURST;
    sc_signal< sc_lv<2> > AXIM2Mat_U0_m_axi_fb_ARLOCK;
    sc_signal< sc_lv<4> > AXIM2Mat_U0_m_axi_fb_ARCACHE;
    sc_signal< sc_lv<3> > AXIM2Mat_U0_m_axi_fb_ARPROT;
    sc_signal< sc_lv<4> > AXIM2Mat_U0_m_axi_fb_ARQOS;
    sc_signal< sc_lv<4> > AXIM2Mat_U0_m_axi_fb_ARREGION;
    sc_signal< sc_lv<1> > AXIM2Mat_U0_m_axi_fb_ARUSER;
    sc_signal< sc_logic > AXIM2Mat_U0_m_axi_fb_RREADY;
    sc_signal< sc_logic > AXIM2Mat_U0_m_axi_fb_BREADY;
    sc_signal< sc_logic > AXIM2Mat_U0_fb_offset_read;
    sc_signal< sc_logic > AXIM2Mat_U0_img_rows_V_read;
    sc_signal< sc_logic > AXIM2Mat_U0_img_cols_V_read;
    sc_signal< sc_lv<8> > AXIM2Mat_U0_img_data_stream_V_din;
    sc_signal< sc_logic > AXIM2Mat_U0_img_data_stream_V_write;
    sc_signal< sc_lv<12> > AXIM2Mat_U0_img_rows_V_out_din;
    sc_signal< sc_logic > AXIM2Mat_U0_img_rows_V_out_write;
    sc_signal< sc_lv<12> > AXIM2Mat_U0_img_cols_V_out_din;
    sc_signal< sc_logic > AXIM2Mat_U0_img_cols_V_out_write;
    sc_signal< sc_logic > Filter2D_U0_ap_start;
    sc_signal< sc_logic > Filter2D_U0_ap_done;
    sc_signal< sc_logic > Filter2D_U0_ap_continue;
    sc_signal< sc_logic > Filter2D_U0_ap_idle;
    sc_signal< sc_logic > Filter2D_U0_ap_ready;
    sc_signal< sc_logic > Filter2D_U0_p_src_rows_V_read;
    sc_signal< sc_logic > Filter2D_U0_p_src_cols_V_read;
    sc_signal< sc_logic > Filter2D_U0_p_src_data_stream_V_read;
    sc_signal< sc_lv<8> > Filter2D_U0_p_dst_data_stream_V_din;
    sc_signal< sc_logic > Filter2D_U0_p_dst_data_stream_V_write;
    sc_signal< sc_logic > Mat2AXIM_U0_ap_start;
    sc_signal< sc_logic > Mat2AXIM_U0_ap_done;
    sc_signal< sc_logic > Mat2AXIM_U0_ap_continue;
    sc_signal< sc_logic > Mat2AXIM_U0_ap_idle;
    sc_signal< sc_logic > Mat2AXIM_U0_ap_ready;
    sc_signal< sc_logic > Mat2AXIM_U0_img_data_stream_V_read;
    sc_signal< sc_logic > Mat2AXIM_U0_m_axi_fb_AWVALID;
    sc_signal< sc_lv<32> > Mat2AXIM_U0_m_axi_fb_AWADDR;
    sc_signal< sc_lv<1> > Mat2AXIM_U0_m_axi_fb_AWID;
    sc_signal< sc_lv<32> > Mat2AXIM_U0_m_axi_fb_AWLEN;
    sc_signal< sc_lv<3> > Mat2AXIM_U0_m_axi_fb_AWSIZE;
    sc_signal< sc_lv<2> > Mat2AXIM_U0_m_axi_fb_AWBURST;
    sc_signal< sc_lv<2> > Mat2AXIM_U0_m_axi_fb_AWLOCK;
    sc_signal< sc_lv<4> > Mat2AXIM_U0_m_axi_fb_AWCACHE;
    sc_signal< sc_lv<3> > Mat2AXIM_U0_m_axi_fb_AWPROT;
    sc_signal< sc_lv<4> > Mat2AXIM_U0_m_axi_fb_AWQOS;
    sc_signal< sc_lv<4> > Mat2AXIM_U0_m_axi_fb_AWREGION;
    sc_signal< sc_lv<1> > Mat2AXIM_U0_m_axi_fb_AWUSER;
    sc_signal< sc_logic > Mat2AXIM_U0_m_axi_fb_WVALID;
    sc_signal< sc_lv<8> > Mat2AXIM_U0_m_axi_fb_WDATA;
    sc_signal< sc_lv<1> > Mat2AXIM_U0_m_axi_fb_WSTRB;
    sc_signal< sc_logic > Mat2AXIM_U0_m_axi_fb_WLAST;
    sc_signal< sc_lv<1> > Mat2AXIM_U0_m_axi_fb_WID;
    sc_signal< sc_lv<1> > Mat2AXIM_U0_m_axi_fb_WUSER;
    sc_signal< sc_logic > Mat2AXIM_U0_m_axi_fb_ARVALID;
    sc_signal< sc_lv<32> > Mat2AXIM_U0_m_axi_fb_ARADDR;
    sc_signal< sc_lv<1> > Mat2AXIM_U0_m_axi_fb_ARID;
    sc_signal< sc_lv<32> > Mat2AXIM_U0_m_axi_fb_ARLEN;
    sc_signal< sc_lv<3> > Mat2AXIM_U0_m_axi_fb_ARSIZE;
    sc_signal< sc_lv<2> > Mat2AXIM_U0_m_axi_fb_ARBURST;
    sc_signal< sc_lv<2> > Mat2AXIM_U0_m_axi_fb_ARLOCK;
    sc_signal< sc_lv<4> > Mat2AXIM_U0_m_axi_fb_ARCACHE;
    sc_signal< sc_lv<3> > Mat2AXIM_U0_m_axi_fb_ARPROT;
    sc_signal< sc_lv<4> > Mat2AXIM_U0_m_axi_fb_ARQOS;
    sc_signal< sc_lv<4> > Mat2AXIM_U0_m_axi_fb_ARREGION;
    sc_signal< sc_lv<1> > Mat2AXIM_U0_m_axi_fb_ARUSER;
    sc_signal< sc_logic > Mat2AXIM_U0_m_axi_fb_RREADY;
    sc_signal< sc_logic > Mat2AXIM_U0_m_axi_fb_BREADY;
    sc_signal< sc_logic > Mat2AXIM_U0_fb_offset_read;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > src_rows_V_c_full_n;
    sc_signal< sc_lv<12> > src_rows_V_c_dout;
    sc_signal< sc_logic > src_rows_V_c_empty_n;
    sc_signal< sc_logic > src_cols_V_c_full_n;
    sc_signal< sc_lv<12> > src_cols_V_c_dout;
    sc_signal< sc_logic > src_cols_V_c_empty_n;
    sc_signal< sc_logic > image_in_c_full_n;
    sc_signal< sc_lv<32> > image_in_c_dout;
    sc_signal< sc_logic > image_in_c_empty_n;
    sc_signal< sc_logic > image_out_c_full_n;
    sc_signal< sc_lv<32> > image_out_c_dout;
    sc_signal< sc_logic > image_out_c_empty_n;
    sc_signal< sc_logic > src_data_stream_0_V_full_n;
    sc_signal< sc_lv<8> > src_data_stream_0_V_dout;
    sc_signal< sc_logic > src_data_stream_0_V_empty_n;
    sc_signal< sc_logic > src_rows_V_c10_full_n;
    sc_signal< sc_lv<12> > src_rows_V_c10_dout;
    sc_signal< sc_logic > src_rows_V_c10_empty_n;
    sc_signal< sc_logic > src_cols_V_c11_full_n;
    sc_signal< sc_lv<12> > src_cols_V_c11_dout;
    sc_signal< sc_logic > src_cols_V_c11_empty_n;
    sc_signal< sc_logic > dst_data_stream_0_V_full_n;
    sc_signal< sc_lv<8> > dst_data_stream_0_V_dout;
    sc_signal< sc_logic > dst_data_stream_0_V_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_logic > ap_sync_reg_Block_proc19_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_Block_proc19_U0_ap_ready;
    sc_signal< sc_lv<2> > Block_proc19_U0_ap_ready_count;
    sc_signal< sc_logic > ap_sync_reg_AXIM2Mat_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_AXIM2Mat_U0_ap_ready;
    sc_signal< sc_lv<2> > AXIM2Mat_U0_ap_ready_count;
    sc_signal< sc_lv<1> > start_for_Mat2AXIM_U0_din;
    sc_signal< sc_logic > start_for_Mat2AXIM_U0_full_n;
    sc_signal< sc_lv<1> > start_for_Mat2AXIM_U0_dout;
    sc_signal< sc_logic > start_for_Mat2AXIM_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_Filter2D_U0_din;
    sc_signal< sc_logic > start_for_Filter2D_U0_full_n;
    sc_signal< sc_lv<1> > start_for_Filter2D_U0_dout;
    sc_signal< sc_logic > start_for_Filter2D_U0_empty_n;
    sc_signal< sc_logic > Filter2D_U0_start_full_n;
    sc_signal< sc_logic > Filter2D_U0_start_write;
    sc_signal< sc_logic > Mat2AXIM_U0_start_full_n;
    sc_signal< sc_logic > Mat2AXIM_U0_start_write;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_S_AXI_WSTRB_WIDTH;
    static const int C_S_AXI_ADDR_WIDTH;
    static const sc_logic ap_const_logic_1;
    static const int C_M_AXI_CRTL_BUS_USER_VALUE;
    static const int C_M_AXI_CRTL_BUS_PROT_VALUE;
    static const int C_M_AXI_CRTL_BUS_CACHE_VALUE;
    static const int C_M_AXI_ID_WIDTH;
    static const int C_M_AXI_ADDR_WIDTH;
    static const int C_M_AXI_DATA_WIDTH;
    static const int C_M_AXI_WSTRB_WIDTH;
    static const int C_M_AXI_AWUSER_WIDTH;
    static const int C_M_AXI_ARUSER_WIDTH;
    static const int C_M_AXI_WUSER_WIDTH;
    static const int C_M_AXI_RUSER_WIDTH;
    static const int C_M_AXI_BUSER_WIDTH;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<8> ap_const_lv8_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_clk_no_reset_();
    void thread_AXIM2Mat_U0_ap_continue();
    void thread_AXIM2Mat_U0_ap_start();
    void thread_Block_proc19_U0_ap_continue();
    void thread_Block_proc19_U0_ap_start();
    void thread_Filter2D_U0_ap_continue();
    void thread_Filter2D_U0_ap_start();
    void thread_Filter2D_U0_start_full_n();
    void thread_Filter2D_U0_start_write();
    void thread_Mat2AXIM_U0_ap_continue();
    void thread_Mat2AXIM_U0_ap_start();
    void thread_Mat2AXIM_U0_start_full_n();
    void thread_Mat2AXIM_U0_start_write();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sync_AXIM2Mat_U0_ap_ready();
    void thread_ap_sync_Block_proc19_U0_ap_ready();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_start_for_Filter2D_U0_din();
    void thread_start_for_Mat2AXIM_U0_din();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
