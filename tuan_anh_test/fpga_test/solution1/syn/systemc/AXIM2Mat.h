// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _AXIM2Mat_HH_
#define _AXIM2Mat_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Array2Mat.h"

namespace ap_rtl {

struct AXIM2Mat : public sc_module {
    // Port declarations 73
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_out< sc_logic > m_axi_fb_AWVALID;
    sc_in< sc_logic > m_axi_fb_AWREADY;
    sc_out< sc_lv<32> > m_axi_fb_AWADDR;
    sc_out< sc_lv<1> > m_axi_fb_AWID;
    sc_out< sc_lv<32> > m_axi_fb_AWLEN;
    sc_out< sc_lv<3> > m_axi_fb_AWSIZE;
    sc_out< sc_lv<2> > m_axi_fb_AWBURST;
    sc_out< sc_lv<2> > m_axi_fb_AWLOCK;
    sc_out< sc_lv<4> > m_axi_fb_AWCACHE;
    sc_out< sc_lv<3> > m_axi_fb_AWPROT;
    sc_out< sc_lv<4> > m_axi_fb_AWQOS;
    sc_out< sc_lv<4> > m_axi_fb_AWREGION;
    sc_out< sc_lv<1> > m_axi_fb_AWUSER;
    sc_out< sc_logic > m_axi_fb_WVALID;
    sc_in< sc_logic > m_axi_fb_WREADY;
    sc_out< sc_lv<8> > m_axi_fb_WDATA;
    sc_out< sc_lv<1> > m_axi_fb_WSTRB;
    sc_out< sc_logic > m_axi_fb_WLAST;
    sc_out< sc_lv<1> > m_axi_fb_WID;
    sc_out< sc_lv<1> > m_axi_fb_WUSER;
    sc_out< sc_logic > m_axi_fb_ARVALID;
    sc_in< sc_logic > m_axi_fb_ARREADY;
    sc_out< sc_lv<32> > m_axi_fb_ARADDR;
    sc_out< sc_lv<1> > m_axi_fb_ARID;
    sc_out< sc_lv<32> > m_axi_fb_ARLEN;
    sc_out< sc_lv<3> > m_axi_fb_ARSIZE;
    sc_out< sc_lv<2> > m_axi_fb_ARBURST;
    sc_out< sc_lv<2> > m_axi_fb_ARLOCK;
    sc_out< sc_lv<4> > m_axi_fb_ARCACHE;
    sc_out< sc_lv<3> > m_axi_fb_ARPROT;
    sc_out< sc_lv<4> > m_axi_fb_ARQOS;
    sc_out< sc_lv<4> > m_axi_fb_ARREGION;
    sc_out< sc_lv<1> > m_axi_fb_ARUSER;
    sc_in< sc_logic > m_axi_fb_RVALID;
    sc_out< sc_logic > m_axi_fb_RREADY;
    sc_in< sc_lv<8> > m_axi_fb_RDATA;
    sc_in< sc_logic > m_axi_fb_RLAST;
    sc_in< sc_lv<1> > m_axi_fb_RID;
    sc_in< sc_lv<1> > m_axi_fb_RUSER;
    sc_in< sc_lv<2> > m_axi_fb_RRESP;
    sc_in< sc_logic > m_axi_fb_BVALID;
    sc_out< sc_logic > m_axi_fb_BREADY;
    sc_in< sc_lv<2> > m_axi_fb_BRESP;
    sc_in< sc_lv<1> > m_axi_fb_BID;
    sc_in< sc_lv<1> > m_axi_fb_BUSER;
    sc_in< sc_lv<32> > fb_offset_dout;
    sc_in< sc_logic > fb_offset_empty_n;
    sc_out< sc_logic > fb_offset_read;
    sc_in< sc_lv<12> > img_rows_V_dout;
    sc_in< sc_logic > img_rows_V_empty_n;
    sc_out< sc_logic > img_rows_V_read;
    sc_in< sc_lv<12> > img_cols_V_dout;
    sc_in< sc_logic > img_cols_V_empty_n;
    sc_out< sc_logic > img_cols_V_read;
    sc_out< sc_lv<8> > img_data_stream_V_din;
    sc_in< sc_logic > img_data_stream_V_full_n;
    sc_out< sc_logic > img_data_stream_V_write;
    sc_out< sc_lv<12> > img_rows_V_out_din;
    sc_in< sc_logic > img_rows_V_out_full_n;
    sc_out< sc_logic > img_rows_V_out_write;
    sc_out< sc_lv<12> > img_cols_V_out_din;
    sc_in< sc_logic > img_cols_V_out_full_n;
    sc_out< sc_logic > img_cols_V_out_write;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<1> > ap_var_for_const2;
    sc_signal< sc_lv<2> > ap_var_for_const1;


    // Module declarations
    AXIM2Mat(sc_module_name name);
    SC_HAS_PROCESS(AXIM2Mat);

    ~AXIM2Mat();

    sc_trace_file* mVcdFile;

    Array2Mat* grp_Array2Mat_fu_140;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > fb_offset_blk_n;
    sc_signal< sc_logic > img_rows_V_blk_n;
    sc_signal< sc_logic > img_cols_V_blk_n;
    sc_signal< sc_logic > img_rows_V_out_blk_n;
    sc_signal< sc_logic > img_cols_V_out_blk_n;
    sc_signal< sc_lv<32> > fb_offset_read_reg_154;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<12> > img_rows_V_read_reg_159;
    sc_signal< sc_lv<12> > img_cols_V_read_reg_164;
    sc_signal< sc_logic > grp_Array2Mat_fu_140_ap_start;
    sc_signal< sc_logic > grp_Array2Mat_fu_140_ap_done;
    sc_signal< sc_logic > grp_Array2Mat_fu_140_ap_idle;
    sc_signal< sc_logic > grp_Array2Mat_fu_140_ap_ready;
    sc_signal< sc_logic > grp_Array2Mat_fu_140_m_axi_fb_AWVALID;
    sc_signal< sc_lv<32> > grp_Array2Mat_fu_140_m_axi_fb_AWADDR;
    sc_signal< sc_lv<1> > grp_Array2Mat_fu_140_m_axi_fb_AWID;
    sc_signal< sc_lv<32> > grp_Array2Mat_fu_140_m_axi_fb_AWLEN;
    sc_signal< sc_lv<3> > grp_Array2Mat_fu_140_m_axi_fb_AWSIZE;
    sc_signal< sc_lv<2> > grp_Array2Mat_fu_140_m_axi_fb_AWBURST;
    sc_signal< sc_lv<2> > grp_Array2Mat_fu_140_m_axi_fb_AWLOCK;
    sc_signal< sc_lv<4> > grp_Array2Mat_fu_140_m_axi_fb_AWCACHE;
    sc_signal< sc_lv<3> > grp_Array2Mat_fu_140_m_axi_fb_AWPROT;
    sc_signal< sc_lv<4> > grp_Array2Mat_fu_140_m_axi_fb_AWQOS;
    sc_signal< sc_lv<4> > grp_Array2Mat_fu_140_m_axi_fb_AWREGION;
    sc_signal< sc_lv<1> > grp_Array2Mat_fu_140_m_axi_fb_AWUSER;
    sc_signal< sc_logic > grp_Array2Mat_fu_140_m_axi_fb_WVALID;
    sc_signal< sc_lv<8> > grp_Array2Mat_fu_140_m_axi_fb_WDATA;
    sc_signal< sc_lv<1> > grp_Array2Mat_fu_140_m_axi_fb_WSTRB;
    sc_signal< sc_logic > grp_Array2Mat_fu_140_m_axi_fb_WLAST;
    sc_signal< sc_lv<1> > grp_Array2Mat_fu_140_m_axi_fb_WID;
    sc_signal< sc_lv<1> > grp_Array2Mat_fu_140_m_axi_fb_WUSER;
    sc_signal< sc_logic > grp_Array2Mat_fu_140_m_axi_fb_ARVALID;
    sc_signal< sc_lv<32> > grp_Array2Mat_fu_140_m_axi_fb_ARADDR;
    sc_signal< sc_lv<1> > grp_Array2Mat_fu_140_m_axi_fb_ARID;
    sc_signal< sc_lv<32> > grp_Array2Mat_fu_140_m_axi_fb_ARLEN;
    sc_signal< sc_lv<3> > grp_Array2Mat_fu_140_m_axi_fb_ARSIZE;
    sc_signal< sc_lv<2> > grp_Array2Mat_fu_140_m_axi_fb_ARBURST;
    sc_signal< sc_lv<2> > grp_Array2Mat_fu_140_m_axi_fb_ARLOCK;
    sc_signal< sc_lv<4> > grp_Array2Mat_fu_140_m_axi_fb_ARCACHE;
    sc_signal< sc_lv<3> > grp_Array2Mat_fu_140_m_axi_fb_ARPROT;
    sc_signal< sc_lv<4> > grp_Array2Mat_fu_140_m_axi_fb_ARQOS;
    sc_signal< sc_lv<4> > grp_Array2Mat_fu_140_m_axi_fb_ARREGION;
    sc_signal< sc_lv<1> > grp_Array2Mat_fu_140_m_axi_fb_ARUSER;
    sc_signal< sc_logic > grp_Array2Mat_fu_140_m_axi_fb_RREADY;
    sc_signal< sc_logic > grp_Array2Mat_fu_140_m_axi_fb_BREADY;
    sc_signal< sc_lv<8> > grp_Array2Mat_fu_140_img_data_stream_V_din;
    sc_signal< sc_logic > grp_Array2Mat_fu_140_img_data_stream_V_write;
    sc_signal< sc_logic > grp_Array2Mat_fu_140_ap_start_reg;
    sc_signal< bool > ap_block_state1_ignore_call20;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_block_state1();
    void thread_ap_block_state1_ignore_call20();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_fb_offset_blk_n();
    void thread_fb_offset_read();
    void thread_grp_Array2Mat_fu_140_ap_start();
    void thread_img_cols_V_blk_n();
    void thread_img_cols_V_out_blk_n();
    void thread_img_cols_V_out_din();
    void thread_img_cols_V_out_write();
    void thread_img_cols_V_read();
    void thread_img_data_stream_V_din();
    void thread_img_data_stream_V_write();
    void thread_img_rows_V_blk_n();
    void thread_img_rows_V_out_blk_n();
    void thread_img_rows_V_out_din();
    void thread_img_rows_V_out_write();
    void thread_img_rows_V_read();
    void thread_internal_ap_ready();
    void thread_m_axi_fb_ARADDR();
    void thread_m_axi_fb_ARBURST();
    void thread_m_axi_fb_ARCACHE();
    void thread_m_axi_fb_ARID();
    void thread_m_axi_fb_ARLEN();
    void thread_m_axi_fb_ARLOCK();
    void thread_m_axi_fb_ARPROT();
    void thread_m_axi_fb_ARQOS();
    void thread_m_axi_fb_ARREGION();
    void thread_m_axi_fb_ARSIZE();
    void thread_m_axi_fb_ARUSER();
    void thread_m_axi_fb_ARVALID();
    void thread_m_axi_fb_AWADDR();
    void thread_m_axi_fb_AWBURST();
    void thread_m_axi_fb_AWCACHE();
    void thread_m_axi_fb_AWID();
    void thread_m_axi_fb_AWLEN();
    void thread_m_axi_fb_AWLOCK();
    void thread_m_axi_fb_AWPROT();
    void thread_m_axi_fb_AWQOS();
    void thread_m_axi_fb_AWREGION();
    void thread_m_axi_fb_AWSIZE();
    void thread_m_axi_fb_AWUSER();
    void thread_m_axi_fb_AWVALID();
    void thread_m_axi_fb_BREADY();
    void thread_m_axi_fb_RREADY();
    void thread_m_axi_fb_WDATA();
    void thread_m_axi_fb_WID();
    void thread_m_axi_fb_WLAST();
    void thread_m_axi_fb_WSTRB();
    void thread_m_axi_fb_WUSER();
    void thread_m_axi_fb_WVALID();
    void thread_real_start();
    void thread_start_out();
    void thread_start_write();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
