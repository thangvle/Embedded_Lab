// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=5,HLS_SYN_DSP=0,HLS_SYN_FF=1784,HLS_SYN_LUT=3380,HLS_VERSION=2018_3}" *)

module conv (
        s_axi_CRTL_BUS_AWVALID,
        s_axi_CRTL_BUS_AWREADY,
        s_axi_CRTL_BUS_AWADDR,
        s_axi_CRTL_BUS_WVALID,
        s_axi_CRTL_BUS_WREADY,
        s_axi_CRTL_BUS_WDATA,
        s_axi_CRTL_BUS_WSTRB,
        s_axi_CRTL_BUS_ARVALID,
        s_axi_CRTL_BUS_ARREADY,
        s_axi_CRTL_BUS_ARADDR,
        s_axi_CRTL_BUS_RVALID,
        s_axi_CRTL_BUS_RREADY,
        s_axi_CRTL_BUS_RDATA,
        s_axi_CRTL_BUS_RRESP,
        s_axi_CRTL_BUS_BVALID,
        s_axi_CRTL_BUS_BREADY,
        s_axi_CRTL_BUS_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        m_axi_CRTL_BUS_AWVALID,
        m_axi_CRTL_BUS_AWREADY,
        m_axi_CRTL_BUS_AWADDR,
        m_axi_CRTL_BUS_AWID,
        m_axi_CRTL_BUS_AWLEN,
        m_axi_CRTL_BUS_AWSIZE,
        m_axi_CRTL_BUS_AWBURST,
        m_axi_CRTL_BUS_AWLOCK,
        m_axi_CRTL_BUS_AWCACHE,
        m_axi_CRTL_BUS_AWPROT,
        m_axi_CRTL_BUS_AWQOS,
        m_axi_CRTL_BUS_AWREGION,
        m_axi_CRTL_BUS_AWUSER,
        m_axi_CRTL_BUS_WVALID,
        m_axi_CRTL_BUS_WREADY,
        m_axi_CRTL_BUS_WDATA,
        m_axi_CRTL_BUS_WSTRB,
        m_axi_CRTL_BUS_WLAST,
        m_axi_CRTL_BUS_WID,
        m_axi_CRTL_BUS_WUSER,
        m_axi_CRTL_BUS_ARVALID,
        m_axi_CRTL_BUS_ARREADY,
        m_axi_CRTL_BUS_ARADDR,
        m_axi_CRTL_BUS_ARID,
        m_axi_CRTL_BUS_ARLEN,
        m_axi_CRTL_BUS_ARSIZE,
        m_axi_CRTL_BUS_ARBURST,
        m_axi_CRTL_BUS_ARLOCK,
        m_axi_CRTL_BUS_ARCACHE,
        m_axi_CRTL_BUS_ARPROT,
        m_axi_CRTL_BUS_ARQOS,
        m_axi_CRTL_BUS_ARREGION,
        m_axi_CRTL_BUS_ARUSER,
        m_axi_CRTL_BUS_RVALID,
        m_axi_CRTL_BUS_RREADY,
        m_axi_CRTL_BUS_RDATA,
        m_axi_CRTL_BUS_RLAST,
        m_axi_CRTL_BUS_RID,
        m_axi_CRTL_BUS_RUSER,
        m_axi_CRTL_BUS_RRESP,
        m_axi_CRTL_BUS_BVALID,
        m_axi_CRTL_BUS_BREADY,
        m_axi_CRTL_BUS_BRESP,
        m_axi_CRTL_BUS_BID,
        m_axi_CRTL_BUS_BUSER
);

parameter    C_S_AXI_CRTL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CRTL_BUS_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;
parameter    C_M_AXI_CRTL_BUS_ID_WIDTH = 1;
parameter    C_M_AXI_CRTL_BUS_ADDR_WIDTH = 32;
parameter    C_M_AXI_CRTL_BUS_DATA_WIDTH = 32;
parameter    C_M_AXI_CRTL_BUS_AWUSER_WIDTH = 1;
parameter    C_M_AXI_CRTL_BUS_ARUSER_WIDTH = 1;
parameter    C_M_AXI_CRTL_BUS_WUSER_WIDTH = 1;
parameter    C_M_AXI_CRTL_BUS_RUSER_WIDTH = 1;
parameter    C_M_AXI_CRTL_BUS_BUSER_WIDTH = 1;
parameter    C_M_AXI_CRTL_BUS_USER_VALUE = 0;
parameter    C_M_AXI_CRTL_BUS_PROT_VALUE = 0;
parameter    C_M_AXI_CRTL_BUS_CACHE_VALUE = 3;
parameter    C_M_AXI_ID_WIDTH = 1;
parameter    C_M_AXI_ADDR_WIDTH = 32;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_AWUSER_WIDTH = 1;
parameter    C_M_AXI_ARUSER_WIDTH = 1;
parameter    C_M_AXI_WUSER_WIDTH = 1;
parameter    C_M_AXI_RUSER_WIDTH = 1;
parameter    C_M_AXI_BUSER_WIDTH = 1;

parameter C_S_AXI_CRTL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_CRTL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_CRTL_BUS_AWVALID;
output   s_axi_CRTL_BUS_AWREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_AWADDR;
input   s_axi_CRTL_BUS_WVALID;
output   s_axi_CRTL_BUS_WREADY;
input  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_WDATA;
input  [C_S_AXI_CRTL_BUS_WSTRB_WIDTH - 1:0] s_axi_CRTL_BUS_WSTRB;
input   s_axi_CRTL_BUS_ARVALID;
output   s_axi_CRTL_BUS_ARREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_ARADDR;
output   s_axi_CRTL_BUS_RVALID;
input   s_axi_CRTL_BUS_RREADY;
output  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_RDATA;
output  [1:0] s_axi_CRTL_BUS_RRESP;
output   s_axi_CRTL_BUS_BVALID;
input   s_axi_CRTL_BUS_BREADY;
output  [1:0] s_axi_CRTL_BUS_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
output   m_axi_CRTL_BUS_AWVALID;
input   m_axi_CRTL_BUS_AWREADY;
output  [C_M_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] m_axi_CRTL_BUS_AWADDR;
output  [C_M_AXI_CRTL_BUS_ID_WIDTH - 1:0] m_axi_CRTL_BUS_AWID;
output  [7:0] m_axi_CRTL_BUS_AWLEN;
output  [2:0] m_axi_CRTL_BUS_AWSIZE;
output  [1:0] m_axi_CRTL_BUS_AWBURST;
output  [1:0] m_axi_CRTL_BUS_AWLOCK;
output  [3:0] m_axi_CRTL_BUS_AWCACHE;
output  [2:0] m_axi_CRTL_BUS_AWPROT;
output  [3:0] m_axi_CRTL_BUS_AWQOS;
output  [3:0] m_axi_CRTL_BUS_AWREGION;
output  [C_M_AXI_CRTL_BUS_AWUSER_WIDTH - 1:0] m_axi_CRTL_BUS_AWUSER;
output   m_axi_CRTL_BUS_WVALID;
input   m_axi_CRTL_BUS_WREADY;
output  [C_M_AXI_CRTL_BUS_DATA_WIDTH - 1:0] m_axi_CRTL_BUS_WDATA;
output  [C_M_AXI_CRTL_BUS_WSTRB_WIDTH - 1:0] m_axi_CRTL_BUS_WSTRB;
output   m_axi_CRTL_BUS_WLAST;
output  [C_M_AXI_CRTL_BUS_ID_WIDTH - 1:0] m_axi_CRTL_BUS_WID;
output  [C_M_AXI_CRTL_BUS_WUSER_WIDTH - 1:0] m_axi_CRTL_BUS_WUSER;
output   m_axi_CRTL_BUS_ARVALID;
input   m_axi_CRTL_BUS_ARREADY;
output  [C_M_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] m_axi_CRTL_BUS_ARADDR;
output  [C_M_AXI_CRTL_BUS_ID_WIDTH - 1:0] m_axi_CRTL_BUS_ARID;
output  [7:0] m_axi_CRTL_BUS_ARLEN;
output  [2:0] m_axi_CRTL_BUS_ARSIZE;
output  [1:0] m_axi_CRTL_BUS_ARBURST;
output  [1:0] m_axi_CRTL_BUS_ARLOCK;
output  [3:0] m_axi_CRTL_BUS_ARCACHE;
output  [2:0] m_axi_CRTL_BUS_ARPROT;
output  [3:0] m_axi_CRTL_BUS_ARQOS;
output  [3:0] m_axi_CRTL_BUS_ARREGION;
output  [C_M_AXI_CRTL_BUS_ARUSER_WIDTH - 1:0] m_axi_CRTL_BUS_ARUSER;
input   m_axi_CRTL_BUS_RVALID;
output   m_axi_CRTL_BUS_RREADY;
input  [C_M_AXI_CRTL_BUS_DATA_WIDTH - 1:0] m_axi_CRTL_BUS_RDATA;
input   m_axi_CRTL_BUS_RLAST;
input  [C_M_AXI_CRTL_BUS_ID_WIDTH - 1:0] m_axi_CRTL_BUS_RID;
input  [C_M_AXI_CRTL_BUS_RUSER_WIDTH - 1:0] m_axi_CRTL_BUS_RUSER;
input  [1:0] m_axi_CRTL_BUS_RRESP;
input   m_axi_CRTL_BUS_BVALID;
output   m_axi_CRTL_BUS_BREADY;
input  [1:0] m_axi_CRTL_BUS_BRESP;
input  [C_M_AXI_CRTL_BUS_ID_WIDTH - 1:0] m_axi_CRTL_BUS_BID;
input  [C_M_AXI_CRTL_BUS_BUSER_WIDTH - 1:0] m_axi_CRTL_BUS_BUSER;

 reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire   [31:0] image_in;
wire   [31:0] image_out;
wire    CRTL_BUS_AWREADY;
wire    CRTL_BUS_WREADY;
wire    CRTL_BUS_ARREADY;
wire    CRTL_BUS_RVALID;
wire   [7:0] CRTL_BUS_RDATA;
wire    CRTL_BUS_RLAST;
wire   [0:0] CRTL_BUS_RID;
wire   [0:0] CRTL_BUS_RUSER;
wire   [1:0] CRTL_BUS_RRESP;
wire    CRTL_BUS_BVALID;
wire   [1:0] CRTL_BUS_BRESP;
wire   [0:0] CRTL_BUS_BID;
wire   [0:0] CRTL_BUS_BUSER;
wire    Block_proc19_U0_ap_start;
wire    Block_proc19_U0_ap_done;
wire    Block_proc19_U0_ap_continue;
wire    Block_proc19_U0_ap_idle;
wire    Block_proc19_U0_ap_ready;
wire    Block_proc19_U0_start_out;
wire    Block_proc19_U0_start_write;
wire   [11:0] Block_proc19_U0_src_rows_V_out_din;
wire    Block_proc19_U0_src_rows_V_out_write;
wire   [11:0] Block_proc19_U0_src_cols_V_out_din;
wire    Block_proc19_U0_src_cols_V_out_write;
wire   [31:0] Block_proc19_U0_image_in_out_din;
wire    Block_proc19_U0_image_in_out_write;
wire   [31:0] Block_proc19_U0_image_out_out_din;
wire    Block_proc19_U0_image_out_out_write;
wire    AXIM2Mat_U0_ap_start;
wire    AXIM2Mat_U0_ap_done;
wire    AXIM2Mat_U0_ap_continue;
wire    AXIM2Mat_U0_ap_idle;
wire    AXIM2Mat_U0_ap_ready;
wire    AXIM2Mat_U0_start_out;
wire    AXIM2Mat_U0_start_write;
wire    AXIM2Mat_U0_m_axi_fb_AWVALID;
wire   [31:0] AXIM2Mat_U0_m_axi_fb_AWADDR;
wire   [0:0] AXIM2Mat_U0_m_axi_fb_AWID;
wire   [31:0] AXIM2Mat_U0_m_axi_fb_AWLEN;
wire   [2:0] AXIM2Mat_U0_m_axi_fb_AWSIZE;
wire   [1:0] AXIM2Mat_U0_m_axi_fb_AWBURST;
wire   [1:0] AXIM2Mat_U0_m_axi_fb_AWLOCK;
wire   [3:0] AXIM2Mat_U0_m_axi_fb_AWCACHE;
wire   [2:0] AXIM2Mat_U0_m_axi_fb_AWPROT;
wire   [3:0] AXIM2Mat_U0_m_axi_fb_AWQOS;
wire   [3:0] AXIM2Mat_U0_m_axi_fb_AWREGION;
wire   [0:0] AXIM2Mat_U0_m_axi_fb_AWUSER;
wire    AXIM2Mat_U0_m_axi_fb_WVALID;
wire   [7:0] AXIM2Mat_U0_m_axi_fb_WDATA;
wire   [0:0] AXIM2Mat_U0_m_axi_fb_WSTRB;
wire    AXIM2Mat_U0_m_axi_fb_WLAST;
wire   [0:0] AXIM2Mat_U0_m_axi_fb_WID;
wire   [0:0] AXIM2Mat_U0_m_axi_fb_WUSER;
wire    AXIM2Mat_U0_m_axi_fb_ARVALID;
wire   [31:0] AXIM2Mat_U0_m_axi_fb_ARADDR;
wire   [0:0] AXIM2Mat_U0_m_axi_fb_ARID;
wire   [31:0] AXIM2Mat_U0_m_axi_fb_ARLEN;
wire   [2:0] AXIM2Mat_U0_m_axi_fb_ARSIZE;
wire   [1:0] AXIM2Mat_U0_m_axi_fb_ARBURST;
wire   [1:0] AXIM2Mat_U0_m_axi_fb_ARLOCK;
wire   [3:0] AXIM2Mat_U0_m_axi_fb_ARCACHE;
wire   [2:0] AXIM2Mat_U0_m_axi_fb_ARPROT;
wire   [3:0] AXIM2Mat_U0_m_axi_fb_ARQOS;
wire   [3:0] AXIM2Mat_U0_m_axi_fb_ARREGION;
wire   [0:0] AXIM2Mat_U0_m_axi_fb_ARUSER;
wire    AXIM2Mat_U0_m_axi_fb_RREADY;
wire    AXIM2Mat_U0_m_axi_fb_BREADY;
wire    AXIM2Mat_U0_fb_offset_read;
wire    AXIM2Mat_U0_img_rows_V_read;
wire    AXIM2Mat_U0_img_cols_V_read;
wire   [7:0] AXIM2Mat_U0_img_data_stream_V_din;
wire    AXIM2Mat_U0_img_data_stream_V_write;
wire   [11:0] AXIM2Mat_U0_img_rows_V_out_din;
wire    AXIM2Mat_U0_img_rows_V_out_write;
wire   [11:0] AXIM2Mat_U0_img_cols_V_out_din;
wire    AXIM2Mat_U0_img_cols_V_out_write;
wire    Filter2D_U0_ap_start;
wire    Filter2D_U0_ap_done;
wire    Filter2D_U0_ap_continue;
wire    Filter2D_U0_ap_idle;
wire    Filter2D_U0_ap_ready;
wire    Filter2D_U0_p_src_rows_V_read;
wire    Filter2D_U0_p_src_cols_V_read;
wire    Filter2D_U0_p_src_data_stream_V_read;
wire   [7:0] Filter2D_U0_p_dst_data_stream_V_din;
wire    Filter2D_U0_p_dst_data_stream_V_write;
wire    Mat2AXIM_U0_ap_start;
wire    Mat2AXIM_U0_ap_done;
wire    Mat2AXIM_U0_ap_continue;
wire    Mat2AXIM_U0_ap_idle;
wire    Mat2AXIM_U0_ap_ready;
wire    Mat2AXIM_U0_img_data_stream_V_read;
wire    Mat2AXIM_U0_m_axi_fb_AWVALID;
wire   [31:0] Mat2AXIM_U0_m_axi_fb_AWADDR;
wire   [0:0] Mat2AXIM_U0_m_axi_fb_AWID;
wire   [31:0] Mat2AXIM_U0_m_axi_fb_AWLEN;
wire   [2:0] Mat2AXIM_U0_m_axi_fb_AWSIZE;
wire   [1:0] Mat2AXIM_U0_m_axi_fb_AWBURST;
wire   [1:0] Mat2AXIM_U0_m_axi_fb_AWLOCK;
wire   [3:0] Mat2AXIM_U0_m_axi_fb_AWCACHE;
wire   [2:0] Mat2AXIM_U0_m_axi_fb_AWPROT;
wire   [3:0] Mat2AXIM_U0_m_axi_fb_AWQOS;
wire   [3:0] Mat2AXIM_U0_m_axi_fb_AWREGION;
wire   [0:0] Mat2AXIM_U0_m_axi_fb_AWUSER;
wire    Mat2AXIM_U0_m_axi_fb_WVALID;
wire   [7:0] Mat2AXIM_U0_m_axi_fb_WDATA;
wire   [0:0] Mat2AXIM_U0_m_axi_fb_WSTRB;
wire    Mat2AXIM_U0_m_axi_fb_WLAST;
wire   [0:0] Mat2AXIM_U0_m_axi_fb_WID;
wire   [0:0] Mat2AXIM_U0_m_axi_fb_WUSER;
wire    Mat2AXIM_U0_m_axi_fb_ARVALID;
wire   [31:0] Mat2AXIM_U0_m_axi_fb_ARADDR;
wire   [0:0] Mat2AXIM_U0_m_axi_fb_ARID;
wire   [31:0] Mat2AXIM_U0_m_axi_fb_ARLEN;
wire   [2:0] Mat2AXIM_U0_m_axi_fb_ARSIZE;
wire   [1:0] Mat2AXIM_U0_m_axi_fb_ARBURST;
wire   [1:0] Mat2AXIM_U0_m_axi_fb_ARLOCK;
wire   [3:0] Mat2AXIM_U0_m_axi_fb_ARCACHE;
wire   [2:0] Mat2AXIM_U0_m_axi_fb_ARPROT;
wire   [3:0] Mat2AXIM_U0_m_axi_fb_ARQOS;
wire   [3:0] Mat2AXIM_U0_m_axi_fb_ARREGION;
wire   [0:0] Mat2AXIM_U0_m_axi_fb_ARUSER;
wire    Mat2AXIM_U0_m_axi_fb_RREADY;
wire    Mat2AXIM_U0_m_axi_fb_BREADY;
wire    Mat2AXIM_U0_fb_offset_read;
wire    ap_sync_continue;
wire    src_rows_V_c_full_n;
wire   [11:0] src_rows_V_c_dout;
wire    src_rows_V_c_empty_n;
wire    src_cols_V_c_full_n;
wire   [11:0] src_cols_V_c_dout;
wire    src_cols_V_c_empty_n;
wire    image_in_c_full_n;
wire   [31:0] image_in_c_dout;
wire    image_in_c_empty_n;
wire    image_out_c_full_n;
wire   [31:0] image_out_c_dout;
wire    image_out_c_empty_n;
wire    src_data_stream_0_V_full_n;
wire   [7:0] src_data_stream_0_V_dout;
wire    src_data_stream_0_V_empty_n;
wire    src_rows_V_c10_full_n;
wire   [11:0] src_rows_V_c10_dout;
wire    src_rows_V_c10_empty_n;
wire    src_cols_V_c11_full_n;
wire   [11:0] src_cols_V_c11_dout;
wire    src_cols_V_c11_empty_n;
wire    dst_data_stream_0_V_full_n;
wire   [7:0] dst_data_stream_0_V_dout;
wire    dst_data_stream_0_V_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_Block_proc19_U0_ap_ready;
wire    ap_sync_Block_proc19_U0_ap_ready;
reg   [1:0] Block_proc19_U0_ap_ready_count;
reg    ap_sync_reg_AXIM2Mat_U0_ap_ready;
wire    ap_sync_AXIM2Mat_U0_ap_ready;
reg   [1:0] AXIM2Mat_U0_ap_ready_count;
wire   [0:0] start_for_Mat2AXIM_U0_din;
wire    start_for_Mat2AXIM_U0_full_n;
wire   [0:0] start_for_Mat2AXIM_U0_dout;
wire    start_for_Mat2AXIM_U0_empty_n;
wire   [0:0] start_for_Filter2D_U0_din;
wire    start_for_Filter2D_U0_full_n;
wire   [0:0] start_for_Filter2D_U0_dout;
wire    start_for_Filter2D_U0_empty_n;
wire    Filter2D_U0_start_full_n;
wire    Filter2D_U0_start_write;
wire    Mat2AXIM_U0_start_full_n;
wire    Mat2AXIM_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_Block_proc19_U0_ap_ready = 1'b0;
#0 Block_proc19_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_AXIM2Mat_U0_ap_ready = 1'b0;
#0 AXIM2Mat_U0_ap_ready_count = 2'd0;
end

conv_CRTL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CRTL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CRTL_BUS_DATA_WIDTH ))
conv_CRTL_BUS_s_axi_U(
    .AWVALID(s_axi_CRTL_BUS_AWVALID),
    .AWREADY(s_axi_CRTL_BUS_AWREADY),
    .AWADDR(s_axi_CRTL_BUS_AWADDR),
    .WVALID(s_axi_CRTL_BUS_WVALID),
    .WREADY(s_axi_CRTL_BUS_WREADY),
    .WDATA(s_axi_CRTL_BUS_WDATA),
    .WSTRB(s_axi_CRTL_BUS_WSTRB),
    .ARVALID(s_axi_CRTL_BUS_ARVALID),
    .ARREADY(s_axi_CRTL_BUS_ARREADY),
    .ARADDR(s_axi_CRTL_BUS_ARADDR),
    .RVALID(s_axi_CRTL_BUS_RVALID),
    .RREADY(s_axi_CRTL_BUS_RREADY),
    .RDATA(s_axi_CRTL_BUS_RDATA),
    .RRESP(s_axi_CRTL_BUS_RRESP),
    .BVALID(s_axi_CRTL_BUS_BVALID),
    .BREADY(s_axi_CRTL_BUS_BREADY),
    .BRESP(s_axi_CRTL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .image_in(image_in),
    .image_out(image_out)
);

conv_CRTL_BUS_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 8 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_CRTL_BUS_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_CRTL_BUS_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_CRTL_BUS_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_CRTL_BUS_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_CRTL_BUS_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_CRTL_BUS_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_CRTL_BUS_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_CRTL_BUS_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_CRTL_BUS_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_CRTL_BUS_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_CRTL_BUS_CACHE_VALUE ))
conv_CRTL_BUS_m_axi_U(
    .AWVALID(m_axi_CRTL_BUS_AWVALID),
    .AWREADY(m_axi_CRTL_BUS_AWREADY),
    .AWADDR(m_axi_CRTL_BUS_AWADDR),
    .AWID(m_axi_CRTL_BUS_AWID),
    .AWLEN(m_axi_CRTL_BUS_AWLEN),
    .AWSIZE(m_axi_CRTL_BUS_AWSIZE),
    .AWBURST(m_axi_CRTL_BUS_AWBURST),
    .AWLOCK(m_axi_CRTL_BUS_AWLOCK),
    .AWCACHE(m_axi_CRTL_BUS_AWCACHE),
    .AWPROT(m_axi_CRTL_BUS_AWPROT),
    .AWQOS(m_axi_CRTL_BUS_AWQOS),
    .AWREGION(m_axi_CRTL_BUS_AWREGION),
    .AWUSER(m_axi_CRTL_BUS_AWUSER),
    .WVALID(m_axi_CRTL_BUS_WVALID),
    .WREADY(m_axi_CRTL_BUS_WREADY),
    .WDATA(m_axi_CRTL_BUS_WDATA),
    .WSTRB(m_axi_CRTL_BUS_WSTRB),
    .WLAST(m_axi_CRTL_BUS_WLAST),
    .WID(m_axi_CRTL_BUS_WID),
    .WUSER(m_axi_CRTL_BUS_WUSER),
    .ARVALID(m_axi_CRTL_BUS_ARVALID),
    .ARREADY(m_axi_CRTL_BUS_ARREADY),
    .ARADDR(m_axi_CRTL_BUS_ARADDR),
    .ARID(m_axi_CRTL_BUS_ARID),
    .ARLEN(m_axi_CRTL_BUS_ARLEN),
    .ARSIZE(m_axi_CRTL_BUS_ARSIZE),
    .ARBURST(m_axi_CRTL_BUS_ARBURST),
    .ARLOCK(m_axi_CRTL_BUS_ARLOCK),
    .ARCACHE(m_axi_CRTL_BUS_ARCACHE),
    .ARPROT(m_axi_CRTL_BUS_ARPROT),
    .ARQOS(m_axi_CRTL_BUS_ARQOS),
    .ARREGION(m_axi_CRTL_BUS_ARREGION),
    .ARUSER(m_axi_CRTL_BUS_ARUSER),
    .RVALID(m_axi_CRTL_BUS_RVALID),
    .RREADY(m_axi_CRTL_BUS_RREADY),
    .RDATA(m_axi_CRTL_BUS_RDATA),
    .RLAST(m_axi_CRTL_BUS_RLAST),
    .RID(m_axi_CRTL_BUS_RID),
    .RUSER(m_axi_CRTL_BUS_RUSER),
    .RRESP(m_axi_CRTL_BUS_RRESP),
    .BVALID(m_axi_CRTL_BUS_BVALID),
    .BREADY(m_axi_CRTL_BUS_BREADY),
    .BRESP(m_axi_CRTL_BUS_BRESP),
    .BID(m_axi_CRTL_BUS_BID),
    .BUSER(m_axi_CRTL_BUS_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(AXIM2Mat_U0_m_axi_fb_ARVALID),
    .I_ARREADY(CRTL_BUS_ARREADY),
    .I_ARADDR(AXIM2Mat_U0_m_axi_fb_ARADDR),
    .I_ARID(AXIM2Mat_U0_m_axi_fb_ARID),
    .I_ARLEN(AXIM2Mat_U0_m_axi_fb_ARLEN),
    .I_ARSIZE(AXIM2Mat_U0_m_axi_fb_ARSIZE),
    .I_ARLOCK(AXIM2Mat_U0_m_axi_fb_ARLOCK),
    .I_ARCACHE(AXIM2Mat_U0_m_axi_fb_ARCACHE),
    .I_ARQOS(AXIM2Mat_U0_m_axi_fb_ARQOS),
    .I_ARPROT(AXIM2Mat_U0_m_axi_fb_ARPROT),
    .I_ARUSER(AXIM2Mat_U0_m_axi_fb_ARUSER),
    .I_ARBURST(AXIM2Mat_U0_m_axi_fb_ARBURST),
    .I_ARREGION(AXIM2Mat_U0_m_axi_fb_ARREGION),
    .I_RVALID(CRTL_BUS_RVALID),
    .I_RREADY(AXIM2Mat_U0_m_axi_fb_RREADY),
    .I_RDATA(CRTL_BUS_RDATA),
    .I_RID(CRTL_BUS_RID),
    .I_RUSER(CRTL_BUS_RUSER),
    .I_RRESP(CRTL_BUS_RRESP),
    .I_RLAST(CRTL_BUS_RLAST),
    .I_AWVALID(Mat2AXIM_U0_m_axi_fb_AWVALID),
    .I_AWREADY(CRTL_BUS_AWREADY),
    .I_AWADDR(Mat2AXIM_U0_m_axi_fb_AWADDR),
    .I_AWID(Mat2AXIM_U0_m_axi_fb_AWID),
    .I_AWLEN(Mat2AXIM_U0_m_axi_fb_AWLEN),
    .I_AWSIZE(Mat2AXIM_U0_m_axi_fb_AWSIZE),
    .I_AWLOCK(Mat2AXIM_U0_m_axi_fb_AWLOCK),
    .I_AWCACHE(Mat2AXIM_U0_m_axi_fb_AWCACHE),
    .I_AWQOS(Mat2AXIM_U0_m_axi_fb_AWQOS),
    .I_AWPROT(Mat2AXIM_U0_m_axi_fb_AWPROT),
    .I_AWUSER(Mat2AXIM_U0_m_axi_fb_AWUSER),
    .I_AWBURST(Mat2AXIM_U0_m_axi_fb_AWBURST),
    .I_AWREGION(Mat2AXIM_U0_m_axi_fb_AWREGION),
    .I_WVALID(Mat2AXIM_U0_m_axi_fb_WVALID),
    .I_WREADY(CRTL_BUS_WREADY),
    .I_WDATA(Mat2AXIM_U0_m_axi_fb_WDATA),
    .I_WID(Mat2AXIM_U0_m_axi_fb_WID),
    .I_WUSER(Mat2AXIM_U0_m_axi_fb_WUSER),
    .I_WLAST(Mat2AXIM_U0_m_axi_fb_WLAST),
    .I_WSTRB(Mat2AXIM_U0_m_axi_fb_WSTRB),
    .I_BVALID(CRTL_BUS_BVALID),
    .I_BREADY(Mat2AXIM_U0_m_axi_fb_BREADY),
    .I_BRESP(CRTL_BUS_BRESP),
    .I_BID(CRTL_BUS_BID),
    .I_BUSER(CRTL_BUS_BUSER)
);

Block_proc19 Block_proc19_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_proc19_U0_ap_start),
    .start_full_n(start_for_Mat2AXIM_U0_full_n),
    .ap_done(Block_proc19_U0_ap_done),
    .ap_continue(Block_proc19_U0_ap_continue),
    .ap_idle(Block_proc19_U0_ap_idle),
    .ap_ready(Block_proc19_U0_ap_ready),
    .start_out(Block_proc19_U0_start_out),
    .start_write(Block_proc19_U0_start_write),
    .src_rows_V_out_din(Block_proc19_U0_src_rows_V_out_din),
    .src_rows_V_out_full_n(src_rows_V_c_full_n),
    .src_rows_V_out_write(Block_proc19_U0_src_rows_V_out_write),
    .src_cols_V_out_din(Block_proc19_U0_src_cols_V_out_din),
    .src_cols_V_out_full_n(src_cols_V_c_full_n),
    .src_cols_V_out_write(Block_proc19_U0_src_cols_V_out_write),
    .image_in(image_in),
    .image_out(image_out),
    .image_in_out_din(Block_proc19_U0_image_in_out_din),
    .image_in_out_full_n(image_in_c_full_n),
    .image_in_out_write(Block_proc19_U0_image_in_out_write),
    .image_out_out_din(Block_proc19_U0_image_out_out_din),
    .image_out_out_full_n(image_out_c_full_n),
    .image_out_out_write(Block_proc19_U0_image_out_out_write)
);

AXIM2Mat AXIM2Mat_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AXIM2Mat_U0_ap_start),
    .start_full_n(start_for_Filter2D_U0_full_n),
    .ap_done(AXIM2Mat_U0_ap_done),
    .ap_continue(AXIM2Mat_U0_ap_continue),
    .ap_idle(AXIM2Mat_U0_ap_idle),
    .ap_ready(AXIM2Mat_U0_ap_ready),
    .start_out(AXIM2Mat_U0_start_out),
    .start_write(AXIM2Mat_U0_start_write),
    .m_axi_fb_AWVALID(AXIM2Mat_U0_m_axi_fb_AWVALID),
    .m_axi_fb_AWREADY(1'b0),
    .m_axi_fb_AWADDR(AXIM2Mat_U0_m_axi_fb_AWADDR),
    .m_axi_fb_AWID(AXIM2Mat_U0_m_axi_fb_AWID),
    .m_axi_fb_AWLEN(AXIM2Mat_U0_m_axi_fb_AWLEN),
    .m_axi_fb_AWSIZE(AXIM2Mat_U0_m_axi_fb_AWSIZE),
    .m_axi_fb_AWBURST(AXIM2Mat_U0_m_axi_fb_AWBURST),
    .m_axi_fb_AWLOCK(AXIM2Mat_U0_m_axi_fb_AWLOCK),
    .m_axi_fb_AWCACHE(AXIM2Mat_U0_m_axi_fb_AWCACHE),
    .m_axi_fb_AWPROT(AXIM2Mat_U0_m_axi_fb_AWPROT),
    .m_axi_fb_AWQOS(AXIM2Mat_U0_m_axi_fb_AWQOS),
    .m_axi_fb_AWREGION(AXIM2Mat_U0_m_axi_fb_AWREGION),
    .m_axi_fb_AWUSER(AXIM2Mat_U0_m_axi_fb_AWUSER),
    .m_axi_fb_WVALID(AXIM2Mat_U0_m_axi_fb_WVALID),
    .m_axi_fb_WREADY(1'b0),
    .m_axi_fb_WDATA(AXIM2Mat_U0_m_axi_fb_WDATA),
    .m_axi_fb_WSTRB(AXIM2Mat_U0_m_axi_fb_WSTRB),
    .m_axi_fb_WLAST(AXIM2Mat_U0_m_axi_fb_WLAST),
    .m_axi_fb_WID(AXIM2Mat_U0_m_axi_fb_WID),
    .m_axi_fb_WUSER(AXIM2Mat_U0_m_axi_fb_WUSER),
    .m_axi_fb_ARVALID(AXIM2Mat_U0_m_axi_fb_ARVALID),
    .m_axi_fb_ARREADY(CRTL_BUS_ARREADY),
    .m_axi_fb_ARADDR(AXIM2Mat_U0_m_axi_fb_ARADDR),
    .m_axi_fb_ARID(AXIM2Mat_U0_m_axi_fb_ARID),
    .m_axi_fb_ARLEN(AXIM2Mat_U0_m_axi_fb_ARLEN),
    .m_axi_fb_ARSIZE(AXIM2Mat_U0_m_axi_fb_ARSIZE),
    .m_axi_fb_ARBURST(AXIM2Mat_U0_m_axi_fb_ARBURST),
    .m_axi_fb_ARLOCK(AXIM2Mat_U0_m_axi_fb_ARLOCK),
    .m_axi_fb_ARCACHE(AXIM2Mat_U0_m_axi_fb_ARCACHE),
    .m_axi_fb_ARPROT(AXIM2Mat_U0_m_axi_fb_ARPROT),
    .m_axi_fb_ARQOS(AXIM2Mat_U0_m_axi_fb_ARQOS),
    .m_axi_fb_ARREGION(AXIM2Mat_U0_m_axi_fb_ARREGION),
    .m_axi_fb_ARUSER(AXIM2Mat_U0_m_axi_fb_ARUSER),
    .m_axi_fb_RVALID(CRTL_BUS_RVALID),
    .m_axi_fb_RREADY(AXIM2Mat_U0_m_axi_fb_RREADY),
    .m_axi_fb_RDATA(CRTL_BUS_RDATA),
    .m_axi_fb_RLAST(CRTL_BUS_RLAST),
    .m_axi_fb_RID(CRTL_BUS_RID),
    .m_axi_fb_RUSER(CRTL_BUS_RUSER),
    .m_axi_fb_RRESP(CRTL_BUS_RRESP),
    .m_axi_fb_BVALID(1'b0),
    .m_axi_fb_BREADY(AXIM2Mat_U0_m_axi_fb_BREADY),
    .m_axi_fb_BRESP(2'd0),
    .m_axi_fb_BID(1'd0),
    .m_axi_fb_BUSER(1'd0),
    .fb_offset_dout(image_in_c_dout),
    .fb_offset_empty_n(image_in_c_empty_n),
    .fb_offset_read(AXIM2Mat_U0_fb_offset_read),
    .img_rows_V_dout(src_rows_V_c_dout),
    .img_rows_V_empty_n(src_rows_V_c_empty_n),
    .img_rows_V_read(AXIM2Mat_U0_img_rows_V_read),
    .img_cols_V_dout(src_cols_V_c_dout),
    .img_cols_V_empty_n(src_cols_V_c_empty_n),
    .img_cols_V_read(AXIM2Mat_U0_img_cols_V_read),
    .img_data_stream_V_din(AXIM2Mat_U0_img_data_stream_V_din),
    .img_data_stream_V_full_n(src_data_stream_0_V_full_n),
    .img_data_stream_V_write(AXIM2Mat_U0_img_data_stream_V_write),
    .img_rows_V_out_din(AXIM2Mat_U0_img_rows_V_out_din),
    .img_rows_V_out_full_n(src_rows_V_c10_full_n),
    .img_rows_V_out_write(AXIM2Mat_U0_img_rows_V_out_write),
    .img_cols_V_out_din(AXIM2Mat_U0_img_cols_V_out_din),
    .img_cols_V_out_full_n(src_cols_V_c11_full_n),
    .img_cols_V_out_write(AXIM2Mat_U0_img_cols_V_out_write)
);

Filter2D Filter2D_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Filter2D_U0_ap_start),
    .ap_done(Filter2D_U0_ap_done),
    .ap_continue(Filter2D_U0_ap_continue),
    .ap_idle(Filter2D_U0_ap_idle),
    .ap_ready(Filter2D_U0_ap_ready),
    .p_src_rows_V_dout(src_rows_V_c10_dout),
    .p_src_rows_V_empty_n(src_rows_V_c10_empty_n),
    .p_src_rows_V_read(Filter2D_U0_p_src_rows_V_read),
    .p_src_cols_V_dout(src_cols_V_c11_dout),
    .p_src_cols_V_empty_n(src_cols_V_c11_empty_n),
    .p_src_cols_V_read(Filter2D_U0_p_src_cols_V_read),
    .p_src_data_stream_V_dout(src_data_stream_0_V_dout),
    .p_src_data_stream_V_empty_n(src_data_stream_0_V_empty_n),
    .p_src_data_stream_V_read(Filter2D_U0_p_src_data_stream_V_read),
    .p_dst_data_stream_V_din(Filter2D_U0_p_dst_data_stream_V_din),
    .p_dst_data_stream_V_full_n(dst_data_stream_0_V_full_n),
    .p_dst_data_stream_V_write(Filter2D_U0_p_dst_data_stream_V_write)
);

Mat2AXIM Mat2AXIM_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Mat2AXIM_U0_ap_start),
    .ap_done(Mat2AXIM_U0_ap_done),
    .ap_continue(Mat2AXIM_U0_ap_continue),
    .ap_idle(Mat2AXIM_U0_ap_idle),
    .ap_ready(Mat2AXIM_U0_ap_ready),
    .img_data_stream_V_dout(dst_data_stream_0_V_dout),
    .img_data_stream_V_empty_n(dst_data_stream_0_V_empty_n),
    .img_data_stream_V_read(Mat2AXIM_U0_img_data_stream_V_read),
    .m_axi_fb_AWVALID(Mat2AXIM_U0_m_axi_fb_AWVALID),
    .m_axi_fb_AWREADY(CRTL_BUS_AWREADY),
    .m_axi_fb_AWADDR(Mat2AXIM_U0_m_axi_fb_AWADDR),
    .m_axi_fb_AWID(Mat2AXIM_U0_m_axi_fb_AWID),
    .m_axi_fb_AWLEN(Mat2AXIM_U0_m_axi_fb_AWLEN),
    .m_axi_fb_AWSIZE(Mat2AXIM_U0_m_axi_fb_AWSIZE),
    .m_axi_fb_AWBURST(Mat2AXIM_U0_m_axi_fb_AWBURST),
    .m_axi_fb_AWLOCK(Mat2AXIM_U0_m_axi_fb_AWLOCK),
    .m_axi_fb_AWCACHE(Mat2AXIM_U0_m_axi_fb_AWCACHE),
    .m_axi_fb_AWPROT(Mat2AXIM_U0_m_axi_fb_AWPROT),
    .m_axi_fb_AWQOS(Mat2AXIM_U0_m_axi_fb_AWQOS),
    .m_axi_fb_AWREGION(Mat2AXIM_U0_m_axi_fb_AWREGION),
    .m_axi_fb_AWUSER(Mat2AXIM_U0_m_axi_fb_AWUSER),
    .m_axi_fb_WVALID(Mat2AXIM_U0_m_axi_fb_WVALID),
    .m_axi_fb_WREADY(CRTL_BUS_WREADY),
    .m_axi_fb_WDATA(Mat2AXIM_U0_m_axi_fb_WDATA),
    .m_axi_fb_WSTRB(Mat2AXIM_U0_m_axi_fb_WSTRB),
    .m_axi_fb_WLAST(Mat2AXIM_U0_m_axi_fb_WLAST),
    .m_axi_fb_WID(Mat2AXIM_U0_m_axi_fb_WID),
    .m_axi_fb_WUSER(Mat2AXIM_U0_m_axi_fb_WUSER),
    .m_axi_fb_ARVALID(Mat2AXIM_U0_m_axi_fb_ARVALID),
    .m_axi_fb_ARREADY(1'b0),
    .m_axi_fb_ARADDR(Mat2AXIM_U0_m_axi_fb_ARADDR),
    .m_axi_fb_ARID(Mat2AXIM_U0_m_axi_fb_ARID),
    .m_axi_fb_ARLEN(Mat2AXIM_U0_m_axi_fb_ARLEN),
    .m_axi_fb_ARSIZE(Mat2AXIM_U0_m_axi_fb_ARSIZE),
    .m_axi_fb_ARBURST(Mat2AXIM_U0_m_axi_fb_ARBURST),
    .m_axi_fb_ARLOCK(Mat2AXIM_U0_m_axi_fb_ARLOCK),
    .m_axi_fb_ARCACHE(Mat2AXIM_U0_m_axi_fb_ARCACHE),
    .m_axi_fb_ARPROT(Mat2AXIM_U0_m_axi_fb_ARPROT),
    .m_axi_fb_ARQOS(Mat2AXIM_U0_m_axi_fb_ARQOS),
    .m_axi_fb_ARREGION(Mat2AXIM_U0_m_axi_fb_ARREGION),
    .m_axi_fb_ARUSER(Mat2AXIM_U0_m_axi_fb_ARUSER),
    .m_axi_fb_RVALID(1'b0),
    .m_axi_fb_RREADY(Mat2AXIM_U0_m_axi_fb_RREADY),
    .m_axi_fb_RDATA(8'd0),
    .m_axi_fb_RLAST(1'b0),
    .m_axi_fb_RID(1'd0),
    .m_axi_fb_RUSER(1'd0),
    .m_axi_fb_RRESP(2'd0),
    .m_axi_fb_BVALID(CRTL_BUS_BVALID),
    .m_axi_fb_BREADY(Mat2AXIM_U0_m_axi_fb_BREADY),
    .m_axi_fb_BRESP(CRTL_BUS_BRESP),
    .m_axi_fb_BID(CRTL_BUS_BID),
    .m_axi_fb_BUSER(CRTL_BUS_BUSER),
    .fb_offset_dout(image_out_c_dout),
    .fb_offset_empty_n(image_out_c_empty_n),
    .fb_offset_read(Mat2AXIM_U0_fb_offset_read)
);

fifo_w12_d2_A src_rows_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_proc19_U0_src_rows_V_out_din),
    .if_full_n(src_rows_V_c_full_n),
    .if_write(Block_proc19_U0_src_rows_V_out_write),
    .if_dout(src_rows_V_c_dout),
    .if_empty_n(src_rows_V_c_empty_n),
    .if_read(AXIM2Mat_U0_img_rows_V_read)
);

fifo_w12_d2_A src_cols_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_proc19_U0_src_cols_V_out_din),
    .if_full_n(src_cols_V_c_full_n),
    .if_write(Block_proc19_U0_src_cols_V_out_write),
    .if_dout(src_cols_V_c_dout),
    .if_empty_n(src_cols_V_c_empty_n),
    .if_read(AXIM2Mat_U0_img_cols_V_read)
);

fifo_w32_d2_A image_in_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_proc19_U0_image_in_out_din),
    .if_full_n(image_in_c_full_n),
    .if_write(Block_proc19_U0_image_in_out_write),
    .if_dout(image_in_c_dout),
    .if_empty_n(image_in_c_empty_n),
    .if_read(AXIM2Mat_U0_fb_offset_read)
);

fifo_w32_d4_A image_out_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_proc19_U0_image_out_out_din),
    .if_full_n(image_out_c_full_n),
    .if_write(Block_proc19_U0_image_out_out_write),
    .if_dout(image_out_c_dout),
    .if_empty_n(image_out_c_empty_n),
    .if_read(Mat2AXIM_U0_fb_offset_read)
);

fifo_w8_d2_A src_data_stream_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIM2Mat_U0_img_data_stream_V_din),
    .if_full_n(src_data_stream_0_V_full_n),
    .if_write(AXIM2Mat_U0_img_data_stream_V_write),
    .if_dout(src_data_stream_0_V_dout),
    .if_empty_n(src_data_stream_0_V_empty_n),
    .if_read(Filter2D_U0_p_src_data_stream_V_read)
);

fifo_w12_d2_A src_rows_V_c10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIM2Mat_U0_img_rows_V_out_din),
    .if_full_n(src_rows_V_c10_full_n),
    .if_write(AXIM2Mat_U0_img_rows_V_out_write),
    .if_dout(src_rows_V_c10_dout),
    .if_empty_n(src_rows_V_c10_empty_n),
    .if_read(Filter2D_U0_p_src_rows_V_read)
);

fifo_w12_d2_A src_cols_V_c11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIM2Mat_U0_img_cols_V_out_din),
    .if_full_n(src_cols_V_c11_full_n),
    .if_write(AXIM2Mat_U0_img_cols_V_out_write),
    .if_dout(src_cols_V_c11_dout),
    .if_empty_n(src_cols_V_c11_empty_n),
    .if_read(Filter2D_U0_p_src_cols_V_read)
);

fifo_w8_d2_A dst_data_stream_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Filter2D_U0_p_dst_data_stream_V_din),
    .if_full_n(dst_data_stream_0_V_full_n),
    .if_write(Filter2D_U0_p_dst_data_stream_V_write),
    .if_dout(dst_data_stream_0_V_dout),
    .if_empty_n(dst_data_stream_0_V_empty_n),
    .if_read(Mat2AXIM_U0_img_data_stream_V_read)
);

start_for_Mat2AXIeOg start_for_Mat2AXIeOg_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Mat2AXIM_U0_din),
    .if_full_n(start_for_Mat2AXIM_U0_full_n),
    .if_write(Block_proc19_U0_start_write),
    .if_dout(start_for_Mat2AXIM_U0_dout),
    .if_empty_n(start_for_Mat2AXIM_U0_empty_n),
    .if_read(Mat2AXIM_U0_ap_ready)
);

start_for_Filter2fYi start_for_Filter2fYi_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Filter2D_U0_din),
    .if_full_n(start_for_Filter2D_U0_full_n),
    .if_write(AXIM2Mat_U0_start_write),
    .if_dout(start_for_Filter2D_U0_dout),
    .if_empty_n(start_for_Filter2D_U0_empty_n),
    .if_read(Filter2D_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_AXIM2Mat_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_AXIM2Mat_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_AXIM2Mat_U0_ap_ready <= ap_sync_AXIM2Mat_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Block_proc19_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Block_proc19_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Block_proc19_U0_ap_ready <= ap_sync_Block_proc19_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sync_ready == 1'b1) & (1'b0 == AXIM2Mat_U0_ap_ready))) begin
        AXIM2Mat_U0_ap_ready_count <= (AXIM2Mat_U0_ap_ready_count - 2'd1);
    end else if (((1'b1 == AXIM2Mat_U0_ap_ready) & (ap_sync_ready == 1'b0))) begin
        AXIM2Mat_U0_ap_ready_count <= (AXIM2Mat_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sync_ready == 1'b1) & (1'b0 == Block_proc19_U0_ap_ready))) begin
        Block_proc19_U0_ap_ready_count <= (Block_proc19_U0_ap_ready_count - 2'd1);
    end else if (((1'b1 == Block_proc19_U0_ap_ready) & (ap_sync_ready == 1'b0))) begin
        Block_proc19_U0_ap_ready_count <= (Block_proc19_U0_ap_ready_count + 2'd1);
    end
end

assign AXIM2Mat_U0_ap_continue = 1'b1;

assign AXIM2Mat_U0_ap_start = ((ap_sync_reg_AXIM2Mat_U0_ap_ready ^ 1'b1) & ap_start);

assign Block_proc19_U0_ap_continue = 1'b1;

assign Block_proc19_U0_ap_start = ((ap_sync_reg_Block_proc19_U0_ap_ready ^ 1'b1) & ap_start);

assign Filter2D_U0_ap_continue = 1'b1;

assign Filter2D_U0_ap_start = start_for_Filter2D_U0_empty_n;

assign Filter2D_U0_start_full_n = 1'b1;

assign Filter2D_U0_start_write = 1'b0;

assign Mat2AXIM_U0_ap_continue = 1'b1;

assign Mat2AXIM_U0_ap_start = start_for_Mat2AXIM_U0_empty_n;

assign Mat2AXIM_U0_start_full_n = 1'b1;

assign Mat2AXIM_U0_start_write = 1'b0;

assign ap_done = Mat2AXIM_U0_ap_done;

assign ap_idle = (Mat2AXIM_U0_ap_idle & Filter2D_U0_ap_idle & Block_proc19_U0_ap_idle & AXIM2Mat_U0_ap_idle);

assign ap_ready = ap_sync_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_AXIM2Mat_U0_ap_ready = (ap_sync_reg_AXIM2Mat_U0_ap_ready | AXIM2Mat_U0_ap_ready);

assign ap_sync_Block_proc19_U0_ap_ready = (ap_sync_reg_Block_proc19_U0_ap_ready | Block_proc19_U0_ap_ready);

assign ap_sync_continue = 1'b1;

assign ap_sync_done = Mat2AXIM_U0_ap_done;

assign ap_sync_ready = (ap_sync_Block_proc19_U0_ap_ready & ap_sync_AXIM2Mat_U0_ap_ready);

assign start_for_Filter2D_U0_din = 1'b1;

assign start_for_Mat2AXIM_U0_din = 1'b1;

endmodule //conv
