#include "FreeRTOS.h"
#include "task.h"
#include "queue.h"
#include "timer.h"

#include "xil_printf.h"
#include "xparameter.h"

//Defining GPIO and constants
#define BTN_GPIO	XPAR_AXI_GPIO_0_DEVICE
#define SWS_GPIO	XPAR_AXI_GPIO_0_DEVICE
#define LED_GPIO	XPAR_AXI_GPIO_1_DEVICE
#define	BTN_CHANNEL 1
#define SWS_CHANNEL	2
#define	LED_CHANNEL	1
#define TIMER_ID 1

XGpio BTNInst, SWInst, LEDInst;


/*
 * 1. Create a TaskLED increment a 4 bits counter with priority +1
 * 2. Create a TaskBTN read BTN at Idle task with priority +1
 * 3. Create a TaskSW read SW with Idle task with priority +1
 *    if(SW0 == 1){
 *        TaskSuspend();
 *    } else{
 *        TaskResume();
 *    }
 *
 */


static void TaskLED(void *pvParameters){
	int status;

	status = XGpio_Initialize(&LEDInst, LED_GPIO);
	if (status != XST_SUCCESS) return XST_FAILURE;

	for(int i = 0; i < 15; i++){
		led = 0;
		XGpio_DiscreteWrite(&LEDInst, LED_CHANNEL, led);
		led++;
	}

}

int main(void)
{

}
